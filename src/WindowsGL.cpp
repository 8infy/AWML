#include <GL/glcorearb.h>
#include <GL/wglext.h>

#include "WindowsGL.h"

PFNWGLCREATECONTEXTATTRIBSARBPROC wglCreateContextAttribsARB;

// 1.0
PFNGLCULLFACEPROC                                    awml_glCullFace;
PFNGLFRONTFACEPROC                                   awml_glFrontFace;
PFNGLHINTPROC                                        awml_glHint;
PFNGLLINEWIDTHPROC                                   awml_glLineWidth;
PFNGLPOINTSIZEPROC                                   awml_glPointSize;
PFNGLPOLYGONMODEPROC                                 awml_glPolygonMode;
PFNGLSCISSORPROC                                     awml_glScissor;
PFNGLTEXPARAMETERFPROC                               awml_glTexParameterf;
PFNGLTEXPARAMETERFVPROC                              awml_glTexParameterfv;
PFNGLTEXPARAMETERIPROC                               awml_glTexParameteri;
PFNGLTEXPARAMETERIVPROC                              awml_glTexParameteriv;
PFNGLTEXIMAGE1DPROC                                  awml_glTexImage1D;
PFNGLTEXIMAGE2DPROC                                  awml_glTexImage2D;
PFNGLDRAWBUFFERPROC                                  awml_glDrawBuffer;
PFNGLCLEARPROC                                       awml_glClear;
PFNGLCLEARCOLORPROC                                  awml_glClearColor;
PFNGLCLEARSTENCILPROC                                awml_glClearStencil;
PFNGLCLEARDEPTHPROC                                  awml_glClearDepth;
PFNGLSTENCILMASKPROC                                 awml_glStencilMask;
PFNGLCOLORMASKPROC                                   awml_glColorMask;
PFNGLDEPTHMASKPROC                                   awml_glDepthMask;
PFNGLDISABLEPROC                                     awml_glDisable;
PFNGLENABLEPROC                                      awml_glEnable;
PFNGLFINISHPROC                                      awml_glFinish;
PFNGLFLUSHPROC                                       awml_glFlush;
PFNGLBLENDFUNCPROC                                   awml_glBlendFunc;
PFNGLLOGICOPPROC                                     awml_glLogicOp;
PFNGLSTENCILFUNCPROC                                 awml_glStencilFunc;
PFNGLSTENCILOPPROC                                   awml_glStencilOp;
PFNGLDEPTHFUNCPROC                                   awml_glDepthFunc;
PFNGLPIXELSTOREFPROC                                 awml_glPixelStoref;
PFNGLPIXELSTOREIPROC                                 awml_glPixelStorei;
PFNGLREADBUFFERPROC                                  awml_glReadBuffer;
PFNGLREADPIXELSPROC                                  awml_glReadPixels;
PFNGLGETBOOLEANVPROC                                 awml_glGetBooleanv;
PFNGLGETDOUBLEVPROC                                  awml_glGetDoublev;
PFNGLGETERRORPROC                                    awml_glGetError;
PFNGLGETFLOATVPROC                                   awml_glGetFloatv;
PFNGLGETINTEGERVPROC                                 awml_glGetIntegerv;
PFNGLGETSTRINGPROC                                   awml_glGetString;
PFNGLGETTEXIMAGEPROC                                 awml_glGetTexImage;
PFNGLGETTEXPARAMETERFVPROC                           awml_glGetTexParameterfv;
PFNGLGETTEXPARAMETERIVPROC                           awml_glGetTexParameteriv;
PFNGLGETTEXLEVELPARAMETERFVPROC                      awml_glGetTexLevelParameterfv;
PFNGLGETTEXLEVELPARAMETERIVPROC                      awml_glGetTexLevelParameteriv;
PFNGLISENABLEDPROC                                   awml_glIsEnabled;
PFNGLDEPTHRANGEPROC                                  awml_glDepthRange;
PFNGLVIEWPORTPROC                                    awml_glViewport;

// 1.1
PFNGLDRAWARRAYSPROC                                  awml_glDrawArrays;
PFNGLDRAWELEMENTSPROC                                awml_glDrawElements;
PFNGLGETPOINTERVPROC                                 awml_glGetPointerv;
PFNGLPOLYGONOFFSETPROC                               awml_glPolygonOffset;
PFNGLCOPYTEXIMAGE1DPROC                              awml_glCopyTexImage1D;
PFNGLCOPYTEXIMAGE2DPROC                              awml_glCopyTexImage2D;
PFNGLCOPYTEXSUBIMAGE1DPROC                           awml_glCopyTexSubImage1D;
PFNGLCOPYTEXSUBIMAGE2DPROC                           awml_glCopyTexSubImage2D;
PFNGLTEXSUBIMAGE1DPROC                               awml_glTexSubImage1D;
PFNGLTEXSUBIMAGE2DPROC                               awml_glTexSubImage2D;
PFNGLBINDTEXTUREPROC                                 awml_glBindTexture;
PFNGLDELETETEXTURESPROC                              awml_glDeleteTextures;
PFNGLGENTEXTURESPROC                                 awml_glGenTextures;
PFNGLISTEXTUREPROC                                   awml_glIsTexture;

// 1.2
PFNGLDRAWRANGEELEMENTSPROC                           awml_glDrawRangeElements;
PFNGLTEXIMAGE3DPROC                                  awml_glTexImage3D;
PFNGLTEXSUBIMAGE3DPROC                               awml_glTexSubImage3D;
PFNGLCOPYTEXSUBIMAGE3DPROC                           awml_glCopyTexSubImage3D;

// 1.3
PFNGLACTIVETEXTUREPROC                               awml_glActiveTexture;
PFNGLSAMPLECOVERAGEPROC                              awml_glSampleCoverage;
PFNGLCOMPRESSEDTEXIMAGE3DPROC                        awml_glCompressedTexImage3D;
PFNGLCOMPRESSEDTEXIMAGE2DPROC                        awml_glCompressedTexImage2D;
PFNGLCOMPRESSEDTEXIMAGE1DPROC                        awml_glCompressedTexImage1D;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC                     awml_glCompressedTexSubImage3D;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC                     awml_glCompressedTexSubImage2D;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC                     awml_glCompressedTexSubImage1D;
PFNGLGETCOMPRESSEDTEXIMAGEPROC                       awml_glGetCompressedTexImage;

// 1.4
PFNGLBLENDFUNCSEPARATEPROC                           awml_glBlendFuncSeparate;
PFNGLMULTIDRAWARRAYSPROC                             awml_glMultiDrawArrays;
PFNGLMULTIDRAWELEMENTSPROC                           awml_glMultiDrawElements;
PFNGLPOINTPARAMETERFPROC                             awml_glPointParameterf;
PFNGLPOINTPARAMETERFVPROC                            awml_glPointParameterfv;
PFNGLPOINTPARAMETERIPROC                             awml_glPointParameteri;
PFNGLPOINTPARAMETERIVPROC                            awml_glPointParameteriv;
PFNGLBLENDCOLORPROC                                  awml_glBlendColor;
PFNGLBLENDEQUATIONPROC                               awml_glBlendEquation;

// 1.5
PFNGLGENQUERIESPROC                                  awml_glGenQueries;
PFNGLDELETEQUERIESPROC                               awml_glDeleteQueries;
PFNGLISQUERYPROC                                     awml_glIsQuery;
PFNGLBEGINQUERYPROC                                  awml_glBeginQuery;
PFNGLENDQUERYPROC                                    awml_glEndQuery;
PFNGLGETQUERYIVPROC                                  awml_glGetQueryiv;
PFNGLGETQUERYOBJECTIVPROC                            awml_glGetQueryObjectiv;
PFNGLGETQUERYOBJECTUIVPROC                           awml_glGetQueryObjectuiv;
PFNGLBINDBUFFERPROC                                  awml_glBindBuffer;
PFNGLDELETEBUFFERSPROC                               awml_glDeleteBuffers;
PFNGLGENBUFFERSPROC                                  awml_glGenBuffers;
PFNGLISBUFFERPROC                                    awml_glIsBuffer;
PFNGLBUFFERDATAPROC                                  awml_glBufferData;
PFNGLBUFFERSUBDATAPROC                               awml_glBufferSubData;
PFNGLGETBUFFERSUBDATAPROC                            awml_glGetBufferSubData;
PFNGLMAPBUFFERPROC                                   awml_glMapBuffer;
PFNGLUNMAPBUFFERPROC                                 awml_glUnmapBuffer;
PFNGLGETBUFFERPARAMETERIVPROC                        awml_glGetBufferParameteriv;
PFNGLGETBUFFERPOINTERVPROC                           awml_glGetBufferPointerv;


// 2.0
PFNGLBLENDEQUATIONSEPARATEPROC                       awml_glBlendEquationSeparate;
PFNGLDRAWBUFFERSPROC                                 awml_glDrawBuffers;
PFNGLSTENCILOPSEPARATEPROC                           awml_glStencilOpSeparate;
PFNGLSTENCILFUNCSEPARATEPROC                         awml_glStencilFuncSeparate;
PFNGLSTENCILMASKSEPARATEPROC                         awml_glStencilMaskSeparate;
PFNGLATTACHSHADERPROC                                awml_glAttachShader;
PFNGLBINDATTRIBLOCATIONPROC                          awml_glBindAttribLocation;
PFNGLCOMPILESHADERPROC                               awml_glCompileShader;
PFNGLCREATEPROGRAMPROC                               awml_glCreateProgram;
PFNGLCREATESHADERPROC                                awml_glCreateShader;
PFNGLDELETEPROGRAMPROC                               awml_glDeleteProgram;
PFNGLDELETESHADERPROC                                awml_glDeleteShader;
PFNGLDETACHSHADERPROC                                awml_glDetachShader;
PFNGLDISABLEVERTEXATTRIBARRAYPROC                    awml_glDisableVertexAttribArray;
PFNGLENABLEVERTEXATTRIBARRAYPROC                     awml_glEnableVertexAttribArray;
PFNGLGETACTIVEATTRIBPROC                             awml_glGetActiveAttrib;
PFNGLGETACTIVEUNIFORMPROC                            awml_glGetActiveUniform;
PFNGLGETATTACHEDSHADERSPROC                          awml_glGetAttachedShaders;
PFNGLGETATTRIBLOCATIONPROC                           awml_glGetAttribLocation;
PFNGLGETPROGRAMIVPROC                                awml_glGetProgramiv;
PFNGLGETPROGRAMINFOLOGPROC                           awml_glGetProgramInfoLog;
PFNGLGETSHADERIVPROC                                 awml_glGetShaderiv;
PFNGLGETSHADERINFOLOGPROC                            awml_glGetShaderInfoLog;
PFNGLGETSHADERSOURCEPROC                             awml_glGetShaderSource;
PFNGLGETUNIFORMLOCATIONPROC                          awml_glGetUniformLocation;
PFNGLGETUNIFORMFVPROC                                awml_glGetUniformfv;
PFNGLGETUNIFORMIVPROC                                awml_glGetUniformiv;
PFNGLGETVERTEXATTRIBDVPROC                           awml_glGetVertexAttribdv;
PFNGLGETVERTEXATTRIBFVPROC                           awml_glGetVertexAttribfv;
PFNGLGETVERTEXATTRIBIVPROC                           awml_glGetVertexAttribiv;
PFNGLGETVERTEXATTRIBPOINTERVPROC                     awml_glGetVertexAttribPointerv;
PFNGLISPROGRAMPROC                                   awml_glIsProgram;
PFNGLISSHADERPROC                                    awml_glIsShader;
PFNGLLINKPROGRAMPROC                                 awml_glLinkProgram;
PFNGLSHADERSOURCEPROC                                awml_glShaderSource;
PFNGLUSEPROGRAMPROC                                  awml_glUseProgram;
PFNGLUNIFORM1FPROC                                   awml_glUniform1f;
PFNGLUNIFORM2FPROC                                   awml_glUniform2f;
PFNGLUNIFORM3FPROC                                   awml_glUniform3f;
PFNGLUNIFORM4FPROC                                   awml_glUniform4f;
PFNGLUNIFORM1IPROC                                   awml_glUniform1i;
PFNGLUNIFORM2IPROC                                   awml_glUniform2i;
PFNGLUNIFORM3IPROC                                   awml_glUniform3i;
PFNGLUNIFORM4IPROC                                   awml_glUniform4i;
PFNGLUNIFORM1FVPROC                                  awml_glUniform1fv;
PFNGLUNIFORM2FVPROC                                  awml_glUniform2fv;
PFNGLUNIFORM3FVPROC                                  awml_glUniform3fv;
PFNGLUNIFORM4FVPROC                                  awml_glUniform4fv;
PFNGLUNIFORM1IVPROC                                  awml_glUniform1iv;
PFNGLUNIFORM2IVPROC                                  awml_glUniform2iv;
PFNGLUNIFORM3IVPROC                                  awml_glUniform3iv;
PFNGLUNIFORM4IVPROC                                  awml_glUniform4iv;
PFNGLUNIFORMMATRIX2FVPROC                            awml_glUniformMatrix2fv;
PFNGLUNIFORMMATRIX3FVPROC                            awml_glUniformMatrix3fv;
PFNGLUNIFORMMATRIX4FVPROC                            awml_glUniformMatrix4fv;
PFNGLVALIDATEPROGRAMPROC                             awml_glValidateProgram;
PFNGLVERTEXATTRIB1DPROC                              awml_glVertexAttrib1d;
PFNGLVERTEXATTRIB1DVPROC                             awml_glVertexAttrib1dv;
PFNGLVERTEXATTRIB1FPROC                              awml_glVertexAttrib1f;
PFNGLVERTEXATTRIB1FVPROC                             awml_glVertexAttrib1fv;
PFNGLVERTEXATTRIB1SPROC                              awml_glVertexAttrib1s;
PFNGLVERTEXATTRIB1SVPROC                             awml_glVertexAttrib1sv;
PFNGLVERTEXATTRIB2DPROC                              awml_glVertexAttrib2d;
PFNGLVERTEXATTRIB2DVPROC                             awml_glVertexAttrib2dv;
PFNGLVERTEXATTRIB2FPROC                              awml_glVertexAttrib2f;
PFNGLVERTEXATTRIB2FVPROC                             awml_glVertexAttrib2fv;
PFNGLVERTEXATTRIB2SPROC                              awml_glVertexAttrib2s;
PFNGLVERTEXATTRIB2SVPROC                             awml_glVertexAttrib2sv;
PFNGLVERTEXATTRIB3DPROC                              awml_glVertexAttrib3d;
PFNGLVERTEXATTRIB3DVPROC                             awml_glVertexAttrib3dv;
PFNGLVERTEXATTRIB3FPROC                              awml_glVertexAttrib3f;
PFNGLVERTEXATTRIB3FVPROC                             awml_glVertexAttrib3fv;
PFNGLVERTEXATTRIB3SPROC                              awml_glVertexAttrib3s;
PFNGLVERTEXATTRIB3SVPROC                             awml_glVertexAttrib3sv;
PFNGLVERTEXATTRIB4NBVPROC                            awml_glVertexAttrib4Nbv;
PFNGLVERTEXATTRIB4NIVPROC                            awml_glVertexAttrib4Niv;
PFNGLVERTEXATTRIB4NSVPROC                            awml_glVertexAttrib4Nsv;
PFNGLVERTEXATTRIB4NUBPROC                            awml_glVertexAttrib4Nub;
PFNGLVERTEXATTRIB4NUBVPROC                           awml_glVertexAttrib4Nubv;
PFNGLVERTEXATTRIB4NUIVPROC                           awml_glVertexAttrib4Nuiv;
PFNGLVERTEXATTRIB4NUSVPROC                           awml_glVertexAttrib4Nusv;
PFNGLVERTEXATTRIB4BVPROC                             awml_glVertexAttrib4bv;
PFNGLVERTEXATTRIB4DPROC                              awml_glVertexAttrib4d;
PFNGLVERTEXATTRIB4DVPROC                             awml_glVertexAttrib4dv;
PFNGLVERTEXATTRIB4FPROC                              awml_glVertexAttrib4f;
PFNGLVERTEXATTRIB4FVPROC                             awml_glVertexAttrib4fv;
PFNGLVERTEXATTRIB4IVPROC                             awml_glVertexAttrib4iv;
PFNGLVERTEXATTRIB4SPROC                              awml_glVertexAttrib4s;
PFNGLVERTEXATTRIB4SVPROC                             awml_glVertexAttrib4sv;
PFNGLVERTEXATTRIB4UBVPROC                            awml_glVertexAttrib4ubv;
PFNGLVERTEXATTRIB4UIVPROC                            awml_glVertexAttrib4uiv;
PFNGLVERTEXATTRIB4USVPROC                            awml_glVertexAttrib4usv;
PFNGLVERTEXATTRIBPOINTERPROC                         awml_glVertexAttribPointer;

// 2.1
PFNGLUNIFORMMATRIX2X3FVPROC                          awml_glUniformMatrix2x3fv;
PFNGLUNIFORMMATRIX3X2FVPROC                          awml_glUniformMatrix3x2fv;
PFNGLUNIFORMMATRIX2X4FVPROC                          awml_glUniformMatrix2x4fv;
PFNGLUNIFORMMATRIX4X2FVPROC                          awml_glUniformMatrix4x2fv;
PFNGLUNIFORMMATRIX3X4FVPROC                          awml_glUniformMatrix3x4fv;
PFNGLUNIFORMMATRIX4X3FVPROC                          awml_glUniformMatrix4x3fv;

// 3.0
PFNGLCOLORMASKIPROC                                  awml_glColorMaski;
PFNGLGETBOOLEANI_VPROC                               awml_glGetBooleani_v;
PFNGLGETINTEGERI_VPROC                               awml_glGetIntegeri_v;
PFNGLENABLEIPROC                                     awml_glEnablei;
PFNGLDISABLEIPROC                                    awml_glDisablei;
PFNGLISENABLEDIPROC                                  awml_glIsEnabledi;
PFNGLBEGINTRANSFORMFEEDBACKPROC                      awml_glBeginTransformFeedback;
PFNGLENDTRANSFORMFEEDBACKPROC                        awml_glEndTransformFeedback;
PFNGLBINDBUFFERRANGEPROC                             awml_glBindBufferRange;
PFNGLBINDBUFFERBASEPROC                              awml_glBindBufferBase;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC                   awml_glTransformFeedbackVaryings;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC                 awml_glGetTransformFeedbackVarying;
PFNGLCLAMPCOLORPROC                                  awml_glClampColor;
PFNGLBEGINCONDITIONALRENDERPROC                      awml_glBeginConditionalRender;
PFNGLENDCONDITIONALRENDERPROC                        awml_glEndConditionalRender;
PFNGLVERTEXATTRIBIPOINTERPROC                        awml_glVertexAttribIPointer;
PFNGLGETVERTEXATTRIBIIVPROC                          awml_glGetVertexAttribIiv;
PFNGLGETVERTEXATTRIBIUIVPROC                         awml_glGetVertexAttribIuiv;
PFNGLVERTEXATTRIBI1IPROC                             awml_glVertexAttribI1i;
PFNGLVERTEXATTRIBI2IPROC                             awml_glVertexAttribI2i;
PFNGLVERTEXATTRIBI3IPROC                             awml_glVertexAttribI3i;
PFNGLVERTEXATTRIBI4IPROC                             awml_glVertexAttribI4i;
PFNGLVERTEXATTRIBI1UIPROC                            awml_glVertexAttribI1ui;
PFNGLVERTEXATTRIBI2UIPROC                            awml_glVertexAttribI2ui;
PFNGLVERTEXATTRIBI3UIPROC                            awml_glVertexAttribI3ui;
PFNGLVERTEXATTRIBI4UIPROC                            awml_glVertexAttribI4ui;
PFNGLVERTEXATTRIBI1IVPROC                            awml_glVertexAttribI1iv;
PFNGLVERTEXATTRIBI2IVPROC                            awml_glVertexAttribI2iv;
PFNGLVERTEXATTRIBI3IVPROC                            awml_glVertexAttribI3iv;
PFNGLVERTEXATTRIBI4IVPROC                            awml_glVertexAttribI4iv;
PFNGLVERTEXATTRIBI1UIVPROC                           awml_glVertexAttribI1uiv;
PFNGLVERTEXATTRIBI2UIVPROC                           awml_glVertexAttribI2uiv;
PFNGLVERTEXATTRIBI3UIVPROC                           awml_glVertexAttribI3uiv;
PFNGLVERTEXATTRIBI4UIVPROC                           awml_glVertexAttribI4uiv;
PFNGLVERTEXATTRIBI4BVPROC                            awml_glVertexAttribI4bv;
PFNGLVERTEXATTRIBI4SVPROC                            awml_glVertexAttribI4sv;
PFNGLVERTEXATTRIBI4UBVPROC                           awml_glVertexAttribI4ubv;
PFNGLVERTEXATTRIBI4USVPROC                           awml_glVertexAttribI4usv;
PFNGLGETUNIFORMUIVPROC                               awml_glGetUniformuiv;
PFNGLBINDFRAGDATALOCATIONPROC                        awml_glBindFragDataLocation;
PFNGLGETFRAGDATALOCATIONPROC                         awml_glGetFragDataLocation;
PFNGLUNIFORM1UIPROC                                  awml_glUniform1ui;
PFNGLUNIFORM2UIPROC                                  awml_glUniform2ui;
PFNGLUNIFORM3UIPROC                                  awml_glUniform3ui;
PFNGLUNIFORM4UIPROC                                  awml_glUniform4ui;
PFNGLUNIFORM1UIVPROC                                 awml_glUniform1uiv;
PFNGLUNIFORM2UIVPROC                                 awml_glUniform2uiv;
PFNGLUNIFORM3UIVPROC                                 awml_glUniform3uiv;
PFNGLUNIFORM4UIVPROC                                 awml_glUniform4uiv;
PFNGLTEXPARAMETERIIVPROC                             awml_glTexParameterIiv;
PFNGLTEXPARAMETERIUIVPROC                            awml_glTexParameterIuiv;
PFNGLGETTEXPARAMETERIIVPROC                          awml_glGetTexParameterIiv;
PFNGLGETTEXPARAMETERIUIVPROC                         awml_glGetTexParameterIuiv;
PFNGLCLEARBUFFERIVPROC                               awml_glClearBufferiv;
PFNGLCLEARBUFFERUIVPROC                              awml_glClearBufferuiv;
PFNGLCLEARBUFFERFVPROC                               awml_glClearBufferfv;
PFNGLCLEARBUFFERFIPROC                               awml_glClearBufferfi;
PFNGLGETSTRINGIPROC                                  awml_glGetStringi;
PFNGLISRENDERBUFFERPROC                              awml_glIsRenderbuffer;
PFNGLBINDRENDERBUFFERPROC                            awml_glBindRenderbuffer;
PFNGLDELETERENDERBUFFERSPROC                         awml_glDeleteRenderbuffers;
PFNGLGENRENDERBUFFERSPROC                            awml_glGenRenderbuffers;
PFNGLRENDERBUFFERSTORAGEPROC                         awml_glRenderbufferStorage;
PFNGLGETRENDERBUFFERPARAMETERIVPROC                  awml_glGetRenderbufferParameteriv;
PFNGLISFRAMEBUFFERPROC                               awml_glIsFramebuffer;
PFNGLBINDFRAMEBUFFERPROC                             awml_glBindFramebuffer;
PFNGLDELETEFRAMEBUFFERSPROC                          awml_glDeleteFramebuffers;
PFNGLGENFRAMEBUFFERSPROC                             awml_glGenFramebuffers;
PFNGLCHECKFRAMEBUFFERSTATUSPROC                      awml_glCheckFramebufferStatus;
PFNGLFRAMEBUFFERTEXTURE1DPROC                        awml_glFramebufferTexture1D;
PFNGLFRAMEBUFFERTEXTURE2DPROC                        awml_glFramebufferTexture2D;
PFNGLFRAMEBUFFERTEXTURE3DPROC                        awml_glFramebufferTexture3D;
PFNGLFRAMEBUFFERRENDERBUFFERPROC                     awml_glFramebufferRenderbuffer;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC         awml_glGetFramebufferAttachmentParameteriv;
PFNGLGENERATEMIPMAPPROC                              awml_glGenerateMipmap;
PFNGLBLITFRAMEBUFFERPROC                             awml_glBlitFramebuffer;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC              awml_glRenderbufferStorageMultisample;
PFNGLFRAMEBUFFERTEXTURELAYERPROC                     awml_glFramebufferTextureLayer;
PFNGLMAPBUFFERRANGEPROC                              awml_glMapBufferRange;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC                      awml_glFlushMappedBufferRange;
PFNGLBINDVERTEXARRAYPROC                             awml_glBindVertexArray;
PFNGLDELETEVERTEXARRAYSPROC                          awml_glDeleteVertexArrays;
PFNGLGENVERTEXARRAYSPROC                             awml_glGenVertexArrays;
PFNGLISVERTEXARRAYPROC                               awml_glIsVertexArray;

// 3.1
PFNGLDRAWARRAYSINSTANCEDPROC                         awml_glDrawArraysInstanced;
PFNGLDRAWELEMENTSINSTANCEDPROC                       awml_glDrawElementsInstanced;
PFNGLTEXBUFFERPROC                                   awml_glTexBuffer;
PFNGLPRIMITIVERESTARTINDEXPROC                       awml_glPrimitiveRestartIndex;
PFNGLCOPYBUFFERSUBDATAPROC                           awml_glCopyBufferSubData;
PFNGLGETUNIFORMINDICESPROC                           awml_glGetUniformIndices;
PFNGLGETACTIVEUNIFORMSIVPROC                         awml_glGetActiveUniformsiv;
PFNGLGETACTIVEUNIFORMNAMEPROC                        awml_glGetActiveUniformName;
PFNGLGETUNIFORMBLOCKINDEXPROC                        awml_glGetUniformBlockIndex;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC                     awml_glGetActiveUniformBlockiv;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC                   awml_glGetActiveUniformBlockName;
PFNGLUNIFORMBLOCKBINDINGPROC                         awml_glUniformBlockBinding;

// 3.2
PFNGLDRAWELEMENTSBASEVERTEXPROC                      awml_glDrawElementsBaseVertex;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC                 awml_glDrawRangeElementsBaseVertex;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC             awml_glDrawElementsInstancedBaseVertex;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC                 awml_glMultiDrawElementsBaseVertex;
PFNGLPROVOKINGVERTEXPROC                             awml_glProvokingVertex;
PFNGLFENCESYNCPROC                                   awml_glFenceSync;
PFNGLISSYNCPROC                                      awml_glIsSync;
PFNGLDELETESYNCPROC                                  awml_glDeleteSync;
PFNGLCLIENTWAITSYNCPROC                              awml_glClientWaitSync;
PFNGLWAITSYNCPROC                                    awml_glWaitSync;
PFNGLGETINTEGER64VPROC                               awml_glGetInteger64v;
PFNGLGETSYNCIVPROC                                   awml_glGetSynciv;
PFNGLGETINTEGER64I_VPROC                             awml_glGetInteger64i_v;
PFNGLGETBUFFERPARAMETERI64VPROC                      awml_glGetBufferParameteri64v;
PFNGLFRAMEBUFFERTEXTUREPROC                          awml_glFramebufferTexture;
PFNGLTEXIMAGE2DMULTISAMPLEPROC                       awml_glTexImage2DMultisample;
PFNGLTEXIMAGE3DMULTISAMPLEPROC                       awml_glTexImage3DMultisample;
PFNGLGETMULTISAMPLEFVPROC                            awml_glGetMultisamplefv;
PFNGLSAMPLEMASKIPROC                                 awml_glSampleMaski;

// 3.3
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC                 awml_glBindFragDataLocationIndexed;
PFNGLGETFRAGDATAINDEXPROC                            awml_glGetFragDataIndex;
PFNGLGENSAMPLERSPROC                                 awml_glGenSamplers;
PFNGLDELETESAMPLERSPROC                              awml_glDeleteSamplers;
PFNGLISSAMPLERPROC                                   awml_glIsSampler;
PFNGLBINDSAMPLERPROC                                 awml_glBindSampler;
PFNGLSAMPLERPARAMETERIPROC                           awml_glSamplerParameteri;
PFNGLSAMPLERPARAMETERIVPROC                          awml_glSamplerParameteriv;
PFNGLSAMPLERPARAMETERFPROC                           awml_glSamplerParameterf;
PFNGLSAMPLERPARAMETERFVPROC                          awml_glSamplerParameterfv;
PFNGLSAMPLERPARAMETERIIVPROC                         awml_glSamplerParameterIiv;
PFNGLSAMPLERPARAMETERIUIVPROC                        awml_glSamplerParameterIuiv;
PFNGLGETSAMPLERPARAMETERIVPROC                       awml_glGetSamplerParameteriv;
PFNGLGETSAMPLERPARAMETERIIVPROC                      awml_glGetSamplerParameterIiv;
PFNGLGETSAMPLERPARAMETERFVPROC                       awml_glGetSamplerParameterfv;
PFNGLGETSAMPLERPARAMETERIUIVPROC                     awml_glGetSamplerParameterIuiv;
PFNGLQUERYCOUNTERPROC                                awml_glQueryCounter;
PFNGLGETQUERYOBJECTI64VPROC                          awml_glGetQueryObjecti64v;
PFNGLGETQUERYOBJECTUI64VPROC                         awml_glGetQueryObjectui64v;
PFNGLVERTEXATTRIBDIVISORPROC                         awml_glVertexAttribDivisor;
PFNGLVERTEXATTRIBP1UIPROC                            awml_glVertexAttribP1ui;
PFNGLVERTEXATTRIBP1UIVPROC                           awml_glVertexAttribP1uiv;
PFNGLVERTEXATTRIBP2UIPROC                            awml_glVertexAttribP2ui;
PFNGLVERTEXATTRIBP2UIVPROC                           awml_glVertexAttribP2uiv;
PFNGLVERTEXATTRIBP3UIPROC                            awml_glVertexAttribP3ui;
PFNGLVERTEXATTRIBP3UIVPROC                           awml_glVertexAttribP3uiv;
PFNGLVERTEXATTRIBP4UIPROC                            awml_glVertexAttribP4ui;
PFNGLVERTEXATTRIBP4UIVPROC                           awml_glVertexAttribP4uiv;

// 4.0
PFNGLMINSAMPLESHADINGPROC                            awml_glMinSampleShading;
PFNGLBLENDEQUATIONIPROC                              awml_glBlendEquationi;
PFNGLBLENDEQUATIONSEPARATEIPROC                      awml_glBlendEquationSeparatei;
PFNGLBLENDFUNCIPROC                                  awml_glBlendFunci;
PFNGLBLENDFUNCSEPARATEIPROC                          awml_glBlendFuncSeparatei;
PFNGLDRAWARRAYSINDIRECTPROC                          awml_glDrawArraysIndirect;
PFNGLDRAWELEMENTSINDIRECTPROC                        awml_glDrawElementsIndirect;
PFNGLUNIFORM1DPROC                                   awml_glUniform1d;
PFNGLUNIFORM2DPROC                                   awml_glUniform2d;
PFNGLUNIFORM3DPROC                                   awml_glUniform3d;
PFNGLUNIFORM4DPROC                                   awml_glUniform4d;
PFNGLUNIFORM1DVPROC                                  awml_glUniform1dv;
PFNGLUNIFORM2DVPROC                                  awml_glUniform2dv;
PFNGLUNIFORM3DVPROC                                  awml_glUniform3dv;
PFNGLUNIFORM4DVPROC                                  awml_glUniform4dv;
PFNGLUNIFORMMATRIX2DVPROC                            awml_glUniformMatrix2dv;
PFNGLUNIFORMMATRIX3DVPROC                            awml_glUniformMatrix3dv;
PFNGLUNIFORMMATRIX4DVPROC                            awml_glUniformMatrix4dv;
PFNGLUNIFORMMATRIX2X3DVPROC                          awml_glUniformMatrix2x3dv;
PFNGLUNIFORMMATRIX2X4DVPROC                          awml_glUniformMatrix2x4dv;
PFNGLUNIFORMMATRIX3X2DVPROC                          awml_glUniformMatrix3x2dv;
PFNGLUNIFORMMATRIX3X4DVPROC                          awml_glUniformMatrix3x4dv;
PFNGLUNIFORMMATRIX4X2DVPROC                          awml_glUniformMatrix4x2dv;
PFNGLUNIFORMMATRIX4X3DVPROC                          awml_glUniformMatrix4x3dv;
PFNGLGETUNIFORMDVPROC                                awml_glGetUniformdv;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC                awml_glGetSubroutineUniformLocation;
PFNGLGETSUBROUTINEINDEXPROC                          awml_glGetSubroutineIndex;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC                awml_glGetActiveSubroutineUniformiv;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC              awml_glGetActiveSubroutineUniformName;
PFNGLGETACTIVESUBROUTINENAMEPROC                     awml_glGetActiveSubroutineName;
PFNGLUNIFORMSUBROUTINESUIVPROC                       awml_glUniformSubroutinesuiv;
PFNGLGETUNIFORMSUBROUTINEUIVPROC                     awml_glGetUniformSubroutineuiv;
PFNGLGETPROGRAMSTAGEIVPROC                           awml_glGetProgramStageiv;
PFNGLPATCHPARAMETERIPROC                             awml_glPatchParameteri;
PFNGLPATCHPARAMETERFVPROC                            awml_glPatchParameterfv;
PFNGLBINDTRANSFORMFEEDBACKPROC                       awml_glBindTransformFeedback;
PFNGLDELETETRANSFORMFEEDBACKSPROC                    awml_glDeleteTransformFeedbacks;
PFNGLGENTRANSFORMFEEDBACKSPROC                       awml_glGenTransformFeedbacks;
PFNGLISTRANSFORMFEEDBACKPROC                         awml_glIsTransformFeedback;
PFNGLPAUSETRANSFORMFEEDBACKPROC                      awml_glPauseTransformFeedback;
PFNGLRESUMETRANSFORMFEEDBACKPROC                     awml_glResumeTransformFeedback;
PFNGLDRAWTRANSFORMFEEDBACKPROC                       awml_glDrawTransformFeedback;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC                 awml_glDrawTransformFeedbackStream;
PFNGLBEGINQUERYINDEXEDPROC                           awml_glBeginQueryIndexed;
PFNGLENDQUERYINDEXEDPROC                             awml_glEndQueryIndexed;
PFNGLGETQUERYINDEXEDIVPROC                           awml_glGetQueryIndexediv;

// 4.1
PFNGLRELEASESHADERCOMPILERPROC                       awml_glReleaseShaderCompiler;
PFNGLSHADERBINARYPROC                                awml_glShaderBinary;
PFNGLGETSHADERPRECISIONFORMATPROC                    awml_glGetShaderPrecisionFormat;
PFNGLDEPTHRANGEFPROC                                 awml_glDepthRangef;
PFNGLCLEARDEPTHFPROC                                 awml_glClearDepthf;
PFNGLGETPROGRAMBINARYPROC                            awml_glGetProgramBinary;
PFNGLPROGRAMBINARYPROC                               awml_glProgramBinary;
PFNGLPROGRAMPARAMETERIPROC                           awml_glProgramParameteri;
PFNGLUSEPROGRAMSTAGESPROC                            awml_glUseProgramStages;
PFNGLACTIVESHADERPROGRAMPROC                         awml_glActiveShaderProgram;
PFNGLCREATESHADERPROGRAMVPROC                        awml_glCreateShaderProgramv;
PFNGLBINDPROGRAMPIPELINEPROC                         awml_glBindProgramPipeline;
PFNGLDELETEPROGRAMPIPELINESPROC                      awml_glDeleteProgramPipelines;
PFNGLGENPROGRAMPIPELINESPROC                         awml_glGenProgramPipelines;
PFNGLISPROGRAMPIPELINEPROC                           awml_glIsProgramPipeline;
PFNGLGETPROGRAMPIPELINEIVPROC                        awml_glGetProgramPipelineiv;
PFNGLPROGRAMUNIFORM1IPROC                            awml_glProgramUniform1i;
PFNGLPROGRAMUNIFORM1IVPROC                           awml_glProgramUniform1iv;
PFNGLPROGRAMUNIFORM1FPROC                            awml_glProgramUniform1f;
PFNGLPROGRAMUNIFORM1FVPROC                           awml_glProgramUniform1fv;
PFNGLPROGRAMUNIFORM1DPROC                            awml_glProgramUniform1d;
PFNGLPROGRAMUNIFORM1DVPROC                           awml_glProgramUniform1dv;
PFNGLPROGRAMUNIFORM1UIPROC                           awml_glProgramUniform1ui;
PFNGLPROGRAMUNIFORM1UIVPROC                          awml_glProgramUniform1uiv;
PFNGLPROGRAMUNIFORM2IPROC                            awml_glProgramUniform2i;
PFNGLPROGRAMUNIFORM2IVPROC                           awml_glProgramUniform2iv;
PFNGLPROGRAMUNIFORM2FPROC                            awml_glProgramUniform2f;
PFNGLPROGRAMUNIFORM2FVPROC                           awml_glProgramUniform2fv;
PFNGLPROGRAMUNIFORM2DPROC                            awml_glProgramUniform2d;
PFNGLPROGRAMUNIFORM2DVPROC                           awml_glProgramUniform2dv;
PFNGLPROGRAMUNIFORM2UIPROC                           awml_glProgramUniform2ui;
PFNGLPROGRAMUNIFORM2UIVPROC                          awml_glProgramUniform2uiv;
PFNGLPROGRAMUNIFORM3IPROC                            awml_glProgramUniform3i;
PFNGLPROGRAMUNIFORM3IVPROC                           awml_glProgramUniform3iv;
PFNGLPROGRAMUNIFORM3FPROC                            awml_glProgramUniform3f;
PFNGLPROGRAMUNIFORM3FVPROC                           awml_glProgramUniform3fv;
PFNGLPROGRAMUNIFORM3DPROC                            awml_glProgramUniform3d;
PFNGLPROGRAMUNIFORM3DVPROC                           awml_glProgramUniform3dv;
PFNGLPROGRAMUNIFORM3UIPROC                           awml_glProgramUniform3ui;
PFNGLPROGRAMUNIFORM3UIVPROC                          awml_glProgramUniform3uiv;
PFNGLPROGRAMUNIFORM4IPROC                            awml_glProgramUniform4i;
PFNGLPROGRAMUNIFORM4IVPROC                           awml_glProgramUniform4iv;
PFNGLPROGRAMUNIFORM4FPROC                            awml_glProgramUniform4f;
PFNGLPROGRAMUNIFORM4FVPROC                           awml_glProgramUniform4fv;
PFNGLPROGRAMUNIFORM4DPROC                            awml_glProgramUniform4d;
PFNGLPROGRAMUNIFORM4DVPROC                           awml_glProgramUniform4dv;
PFNGLPROGRAMUNIFORM4UIPROC                           awml_glProgramUniform4ui;
PFNGLPROGRAMUNIFORM4UIVPROC                          awml_glProgramUniform4uiv;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC                     awml_glProgramUniformMatrix2fv;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC                     awml_glProgramUniformMatrix3fv;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC                     awml_glProgramUniformMatrix4fv;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC                     awml_glProgramUniformMatrix2dv;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC                     awml_glProgramUniformMatrix3dv;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC                     awml_glProgramUniformMatrix4dv;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC                   awml_glProgramUniformMatrix2x3fv;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC                   awml_glProgramUniformMatrix3x2fv;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC                   awml_glProgramUniformMatrix2x4fv;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC                   awml_glProgramUniformMatrix4x2fv;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC                   awml_glProgramUniformMatrix3x4fv;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC                   awml_glProgramUniformMatrix4x3fv;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC                   awml_glProgramUniformMatrix2x3dv;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC                   awml_glProgramUniformMatrix3x2dv;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC                   awml_glProgramUniformMatrix2x4dv;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC                   awml_glProgramUniformMatrix4x2dv;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC                   awml_glProgramUniformMatrix3x4dv;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC                   awml_glProgramUniformMatrix4x3dv;
PFNGLVALIDATEPROGRAMPIPELINEPROC                     awml_glValidateProgramPipeline;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC                   awml_glGetProgramPipelineInfoLog;
PFNGLVERTEXATTRIBL1DPROC                             awml_glVertexAttribL1d;
PFNGLVERTEXATTRIBL2DPROC                             awml_glVertexAttribL2d;
PFNGLVERTEXATTRIBL3DPROC                             awml_glVertexAttribL3d;
PFNGLVERTEXATTRIBL4DPROC                             awml_glVertexAttribL4d;
PFNGLVERTEXATTRIBL1DVPROC                            awml_glVertexAttribL1dv;
PFNGLVERTEXATTRIBL2DVPROC                            awml_glVertexAttribL2dv;
PFNGLVERTEXATTRIBL3DVPROC                            awml_glVertexAttribL3dv;
PFNGLVERTEXATTRIBL4DVPROC                            awml_glVertexAttribL4dv;
PFNGLVERTEXATTRIBLPOINTERPROC                        awml_glVertexAttribLPointer;
PFNGLGETVERTEXATTRIBLDVPROC                          awml_glGetVertexAttribLdv;
PFNGLVIEWPORTARRAYVPROC                              awml_glViewportArrayv;
PFNGLVIEWPORTINDEXEDFPROC                            awml_glViewportIndexedf;
PFNGLVIEWPORTINDEXEDFVPROC                           awml_glViewportIndexedfv;
PFNGLSCISSORARRAYVPROC                               awml_glScissorArrayv;
PFNGLSCISSORINDEXEDPROC                              awml_glScissorIndexed;
PFNGLSCISSORINDEXEDVPROC                             awml_glScissorIndexedv;
PFNGLDEPTHRANGEARRAYVPROC                            awml_glDepthRangeArrayv;
PFNGLDEPTHRANGEINDEXEDPROC                           awml_glDepthRangeIndexed;
PFNGLGETFLOATI_VPROC                                 awml_glGetFloati_v;
PFNGLGETDOUBLEI_VPROC                                awml_glGetDoublei_v;

// 4.2
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC             awml_glDrawArraysInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC           awml_glDrawElementsInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC awml_glDrawElementsInstancedBaseVertexBaseInstance;
PFNGLGETINTERNALFORMATIVPROC                         awml_glGetInternalformativ;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC              awml_glGetActiveAtomicCounterBufferiv;
PFNGLBINDIMAGETEXTUREPROC                            awml_glBindImageTexture;
PFNGLMEMORYBARRIERPROC                               awml_glMemoryBarrier;
PFNGLTEXSTORAGE1DPROC                                awml_glTexStorage1D;
PFNGLTEXSTORAGE2DPROC                                awml_glTexStorage2D;
PFNGLTEXSTORAGE3DPROC                                awml_glTexStorage3D;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC              awml_glDrawTransformFeedbackInstanced;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC        awml_glDrawTransformFeedbackStreamInstanced;

// 4.3
PFNGLCLEARBUFFERDATAPROC                             awml_glClearBufferData;
PFNGLCLEARBUFFERSUBDATAPROC                          awml_glClearBufferSubData;
PFNGLDISPATCHCOMPUTEPROC                             awml_glDispatchCompute;
PFNGLDISPATCHCOMPUTEINDIRECTPROC                     awml_glDispatchComputeIndirect;
PFNGLCOPYIMAGESUBDATAPROC                            awml_glCopyImageSubData;
PFNGLFRAMEBUFFERPARAMETERIPROC                       awml_glFramebufferParameteri;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC                   awml_glGetFramebufferParameteriv;
PFNGLGETINTERNALFORMATI64VPROC                       awml_glGetInternalformati64v;
PFNGLINVALIDATETEXSUBIMAGEPROC                       awml_glInvalidateTexSubImage;
PFNGLINVALIDATETEXIMAGEPROC                          awml_glInvalidateTexImage;
PFNGLINVALIDATEBUFFERSUBDATAPROC                     awml_glInvalidateBufferSubData;
PFNGLINVALIDATEBUFFERDATAPROC                        awml_glInvalidateBufferData;
PFNGLINVALIDATEFRAMEBUFFERPROC                       awml_glInvalidateFramebuffer;
PFNGLINVALIDATESUBFRAMEBUFFERPROC                    awml_glInvalidateSubFramebuffer;
PFNGLMULTIDRAWARRAYSINDIRECTPROC                     awml_glMultiDrawArraysIndirect;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC                   awml_glMultiDrawElementsIndirect;
PFNGLGETPROGRAMINTERFACEIVPROC                       awml_glGetProgramInterfaceiv;
PFNGLGETPROGRAMRESOURCEINDEXPROC                     awml_glGetProgramResourceIndex;
PFNGLGETPROGRAMRESOURCENAMEPROC                      awml_glGetProgramResourceName;
PFNGLGETPROGRAMRESOURCEIVPROC                        awml_glGetProgramResourceiv;
PFNGLGETPROGRAMRESOURCELOCATIONPROC                  awml_glGetProgramResourceLocation;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC             awml_glGetProgramResourceLocationIndex;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC                   awml_glShaderStorageBlockBinding;
PFNGLTEXBUFFERRANGEPROC                              awml_glTexBufferRange;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC                     awml_glTexStorage2DMultisample;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC                     awml_glTexStorage3DMultisample;
PFNGLTEXTUREVIEWPROC                                 awml_glTextureView;
PFNGLBINDVERTEXBUFFERPROC                            awml_glBindVertexBuffer;
PFNGLVERTEXATTRIBFORMATPROC                          awml_glVertexAttribFormat;
PFNGLVERTEXATTRIBIFORMATPROC                         awml_glVertexAttribIFormat;
PFNGLVERTEXATTRIBLFORMATPROC                         awml_glVertexAttribLFormat;
PFNGLVERTEXATTRIBBINDINGPROC                         awml_glVertexAttribBinding;
PFNGLVERTEXBINDINGDIVISORPROC                        awml_glVertexBindingDivisor;
PFNGLDEBUGMESSAGECONTROLPROC                         awml_glDebugMessageControl;
PFNGLDEBUGMESSAGEINSERTPROC                          awml_glDebugMessageInsert;
PFNGLDEBUGMESSAGECALLBACKPROC                        awml_glDebugMessageCallback;
PFNGLGETDEBUGMESSAGELOGPROC                          awml_glGetDebugMessageLog;
PFNGLPUSHDEBUGGROUPPROC                              awml_glPushDebugGroup;
PFNGLPOPDEBUGGROUPPROC                               awml_glPopDebugGroup;
PFNGLOBJECTLABELPROC                                 awml_glObjectLabel;
PFNGLGETOBJECTLABELPROC                              awml_glGetObjectLabel;
PFNGLOBJECTPTRLABELPROC                              awml_glObjectPtrLabel;
PFNGLGETOBJECTPTRLABELPROC                           awml_glGetObjectPtrLabel;

// 4.4
PFNGLBUFFERSTORAGEPROC                               awml_glBufferStorage;
PFNGLCLEARTEXIMAGEPROC                               awml_glClearTexImage;
PFNGLCLEARTEXSUBIMAGEPROC                            awml_glClearTexSubImage;
PFNGLBINDBUFFERSBASEPROC                             awml_glBindBuffersBase;
PFNGLBINDBUFFERSRANGEPROC                            awml_glBindBuffersRange;
PFNGLBINDTEXTURESPROC                                awml_glBindTextures;
PFNGLBINDSAMPLERSPROC                                awml_glBindSamplers;
PFNGLBINDIMAGETEXTURESPROC                           awml_glBindImageTextures;
PFNGLBINDVERTEXBUFFERSPROC                           awml_glBindVertexBuffers;

// 4.5
PFNGLCLIPCONTROLPROC                                 awml_glClipControl;
PFNGLCREATETRANSFORMFEEDBACKSPROC                    awml_glCreateTransformFeedbacks;
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC                 awml_glTransformFeedbackBufferBase;
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC                awml_glTransformFeedbackBufferRange;
PFNGLGETTRANSFORMFEEDBACKIVPROC                      awml_glGetTransformFeedbackiv;
PFNGLGETTRANSFORMFEEDBACKI_VPROC                     awml_glGetTransformFeedbacki_v;
PFNGLGETTRANSFORMFEEDBACKI64_VPROC                   awml_glGetTransformFeedbacki64_v;
PFNGLCREATEBUFFERSPROC                               awml_glCreateBuffers;
PFNGLNAMEDBUFFERSTORAGEPROC                          awml_glNamedBufferStorage;
PFNGLNAMEDBUFFERDATAPROC                             awml_glNamedBufferData;
PFNGLNAMEDBUFFERSUBDATAPROC                          awml_glNamedBufferSubData;
PFNGLCOPYNAMEDBUFFERSUBDATAPROC                      awml_glCopyNamedBufferSubData;
PFNGLCLEARNAMEDBUFFERDATAPROC                        awml_glClearNamedBufferData;
PFNGLCLEARNAMEDBUFFERSUBDATAPROC                     awml_glClearNamedBufferSubData;
PFNGLMAPNAMEDBUFFERPROC                              awml_glMapNamedBuffer;
PFNGLMAPNAMEDBUFFERRANGEPROC                         awml_glMapNamedBufferRange;
PFNGLUNMAPNAMEDBUFFERPROC                            awml_glUnmapNamedBuffer;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC                 awml_glFlushMappedNamedBufferRange;
PFNGLGETNAMEDBUFFERPARAMETERIVPROC                   awml_glGetNamedBufferParameteriv;
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC                 awml_glGetNamedBufferParameteri64v;
PFNGLGETNAMEDBUFFERPOINTERVPROC                      awml_glGetNamedBufferPointerv;
PFNGLGETNAMEDBUFFERSUBDATAPROC                       awml_glGetNamedBufferSubData;
PFNGLCREATEFRAMEBUFFERSPROC                          awml_glCreateFramebuffers;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC                awml_glNamedFramebufferRenderbuffer;
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC                  awml_glNamedFramebufferParameteri;
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC                     awml_glNamedFramebufferTexture;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC                awml_glNamedFramebufferTextureLayer;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC                  awml_glNamedFramebufferDrawBuffer;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC                 awml_glNamedFramebufferDrawBuffers;
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC                  awml_glNamedFramebufferReadBuffer;
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC              awml_glInvalidateNamedFramebufferData;
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC           awml_glInvalidateNamedFramebufferSubData;
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC                     awml_glClearNamedFramebufferiv;
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC                    awml_glClearNamedFramebufferuiv;
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC                     awml_glClearNamedFramebufferfv;
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC                     awml_glClearNamedFramebufferfi;
PFNGLBLITNAMEDFRAMEBUFFERPROC                        awml_glBlitNamedFramebuffer;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC                 awml_glCheckNamedFramebufferStatus;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC              awml_glGetNamedFramebufferParameteriv;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC    awml_glGetNamedFramebufferAttachmentParameteriv;
PFNGLCREATERENDERBUFFERSPROC                         awml_glCreateRenderbuffers;
PFNGLNAMEDRENDERBUFFERSTORAGEPROC                    awml_glNamedRenderbufferStorage;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC         awml_glNamedRenderbufferStorageMultisample;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC             awml_glGetNamedRenderbufferParameteriv;
PFNGLCREATETEXTURESPROC                              awml_glCreateTextures;
PFNGLTEXTUREBUFFERPROC                               awml_glTextureBuffer;
PFNGLTEXTUREBUFFERRANGEPROC                          awml_glTextureBufferRange;
PFNGLTEXTURESTORAGE1DPROC                            awml_glTextureStorage1D;
PFNGLTEXTURESTORAGE2DPROC                            awml_glTextureStorage2D;
PFNGLTEXTURESTORAGE3DPROC                            awml_glTextureStorage3D;
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC                 awml_glTextureStorage2DMultisample;
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC                 awml_glTextureStorage3DMultisample;
PFNGLTEXTURESUBIMAGE1DPROC                           awml_glTextureSubImage1D;
PFNGLTEXTURESUBIMAGE2DPROC                           awml_glTextureSubImage2D;
PFNGLTEXTURESUBIMAGE3DPROC                           awml_glTextureSubImage3D;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC                 awml_glCompressedTextureSubImage1D;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC                 awml_glCompressedTextureSubImage2D;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC                 awml_glCompressedTextureSubImage3D;
PFNGLCOPYTEXTURESUBIMAGE1DPROC                       awml_glCopyTextureSubImage1D;
PFNGLCOPYTEXTURESUBIMAGE2DPROC                       awml_glCopyTextureSubImage2D;
PFNGLCOPYTEXTURESUBIMAGE3DPROC                       awml_glCopyTextureSubImage3D;
PFNGLTEXTUREPARAMETERFPROC                           awml_glTextureParameterf;
PFNGLTEXTUREPARAMETERFVPROC                          awml_glTextureParameterfv;
PFNGLTEXTUREPARAMETERIPROC                           awml_glTextureParameteri;
PFNGLTEXTUREPARAMETERIIVPROC                         awml_glTextureParameterIiv;
PFNGLTEXTUREPARAMETERIUIVPROC                        awml_glTextureParameterIuiv;
PFNGLTEXTUREPARAMETERIVPROC                          awml_glTextureParameteriv;
PFNGLGENERATETEXTUREMIPMAPPROC                       awml_glGenerateTextureMipmap;
PFNGLBINDTEXTUREUNITPROC                             awml_glBindTextureUnit;
PFNGLGETTEXTUREIMAGEPROC                             awml_glGetTextureImage;
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC                   awml_glGetCompressedTextureImage;
PFNGLGETTEXTURELEVELPARAMETERFVPROC                  awml_glGetTextureLevelParameterfv;
PFNGLGETTEXTURELEVELPARAMETERIVPROC                  awml_glGetTextureLevelParameteriv;
PFNGLGETTEXTUREPARAMETERFVPROC                       awml_glGetTextureParameterfv;
PFNGLGETTEXTUREPARAMETERIIVPROC                      awml_glGetTextureParameterIiv;
PFNGLGETTEXTUREPARAMETERIUIVPROC                     awml_glGetTextureParameterIuiv;
PFNGLGETTEXTUREPARAMETERIVPROC                       awml_glGetTextureParameteriv;
PFNGLCREATEVERTEXARRAYSPROC                          awml_glCreateVertexArrays;
PFNGLDISABLEVERTEXARRAYATTRIBPROC                    awml_glDisableVertexArrayAttrib;
PFNGLENABLEVERTEXARRAYATTRIBPROC                     awml_glEnableVertexArrayAttrib;
PFNGLVERTEXARRAYELEMENTBUFFERPROC                    awml_glVertexArrayElementBuffer;
PFNGLVERTEXARRAYVERTEXBUFFERPROC                     awml_glVertexArrayVertexBuffer;
PFNGLVERTEXARRAYVERTEXBUFFERSPROC                    awml_glVertexArrayVertexBuffers;
PFNGLVERTEXARRAYATTRIBBINDINGPROC                    awml_glVertexArrayAttribBinding;
PFNGLVERTEXARRAYATTRIBFORMATPROC                     awml_glVertexArrayAttribFormat;
PFNGLVERTEXARRAYATTRIBIFORMATPROC                    awml_glVertexArrayAttribIFormat;
PFNGLVERTEXARRAYATTRIBLFORMATPROC                    awml_glVertexArrayAttribLFormat;
PFNGLVERTEXARRAYBINDINGDIVISORPROC                   awml_glVertexArrayBindingDivisor;
PFNGLGETVERTEXARRAYIVPROC                            awml_glGetVertexArrayiv;
PFNGLGETVERTEXARRAYINDEXEDIVPROC                     awml_glGetVertexArrayIndexediv;
PFNGLGETVERTEXARRAYINDEXED64IVPROC                   awml_glGetVertexArrayIndexed64iv;
PFNGLCREATESAMPLERSPROC                              awml_glCreateSamplers;
PFNGLCREATEPROGRAMPIPELINESPROC                      awml_glCreateProgramPipelines;
PFNGLCREATEQUERIESPROC                               awml_glCreateQueries;
PFNGLGETQUERYBUFFEROBJECTI64VPROC                    awml_glGetQueryBufferObjecti64v;
PFNGLGETQUERYBUFFEROBJECTIVPROC                      awml_glGetQueryBufferObjectiv;
PFNGLGETQUERYBUFFEROBJECTUI64VPROC                   awml_glGetQueryBufferObjectui64v;
PFNGLGETQUERYBUFFEROBJECTUIVPROC                     awml_glGetQueryBufferObjectuiv;
PFNGLMEMORYBARRIERBYREGIONPROC                       awml_glMemoryBarrierByRegion;
PFNGLGETTEXTURESUBIMAGEPROC                          awml_glGetTextureSubImage;
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC                awml_glGetCompressedTextureSubImage;
PFNGLGETGRAPHICSRESETSTATUSPROC                      awml_glGetGraphicsResetStatus;
PFNGLGETNCOMPRESSEDTEXIMAGEPROC                      awml_glGetnCompressedTexImage;
PFNGLGETNTEXIMAGEPROC                                awml_glGetnTexImage;
PFNGLGETNUNIFORMDVPROC                               awml_glGetnUniformdv;
PFNGLGETNUNIFORMFVPROC                               awml_glGetnUniformfv;
PFNGLGETNUNIFORMIVPROC                               awml_glGetnUniformiv;
PFNGLGETNUNIFORMUIVPROC                              awml_glGetnUniformuiv;
PFNGLREADNPIXELSPROC                                 awml_glReadnPixels;
PFNGLTEXTUREBARRIERPROC                              awml_glTextureBarrier;

// 4.6
PFNGLSPECIALIZESHADERPROC                            awml_glSpecializeShader;
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC                awml_glMultiDrawArraysIndirectCount;
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC              awml_glMultiDrawElementsIndirectCount;
PFNGLPOLYGONOFFSETCLAMPPROC                          awml_glPolygonOffsetClamp;

namespace awml {

    bool glLoader::Init()
    {
        wglCreateContextAttribsARB = (PFNWGLCREATECONTEXTATTRIBSARBPROC)wglGetProcAddress("wglCreateContextAttribsARB");
        awml_glGetString = (PFNGLGETSTRINGPROC)try_load("glGetString");

        if (wglCreateContextAttribsARB && awml_glGetString)
            return true;

        return false;
    }

    bool glLoader::LoadVersion(char major, char minor)
    {
        static bool loaded = false;
        if (loaded) return true;
        loaded = true;

        try {
            if (major >= 1)
            {
                awml_glCullFace                                    = (PFNGLCULLFACEPROC)                                    try_load("glCullFace");
                awml_glFrontFace                                   = (PFNGLFRONTFACEPROC)                                   try_load("glFrontFace");
                awml_glHint                                        = (PFNGLHINTPROC)                                        try_load("glHint");
                awml_glLineWidth                                   = (PFNGLLINEWIDTHPROC)                                   try_load("glHint");
                awml_glPointSize                                   = (PFNGLPOINTSIZEPROC)                                   try_load("glPointSize");
                awml_glPolygonMode                                 = (PFNGLPOLYGONMODEPROC)                                 try_load("glPolygonMode");
                awml_glScissor                                     = (PFNGLSCISSORPROC)                                     try_load("glScissor");
                awml_glTexParameterf                               = (PFNGLTEXPARAMETERFPROC)                               try_load("glTexParameterf");
                awml_glTexParameterfv                              = (PFNGLTEXPARAMETERFVPROC)                              try_load("glTexParameterfv");
                awml_glTexParameteri                               = (PFNGLTEXPARAMETERIPROC)                               try_load("glTexParameteri");
                awml_glTexParameteriv                              = (PFNGLTEXPARAMETERIVPROC)                              try_load("glTexParameteriv");
                awml_glTexImage1D                                  = (PFNGLTEXIMAGE1DPROC)                                  try_load("glTexImage1D");
                awml_glTexImage2D                                  = (PFNGLTEXIMAGE2DPROC)                                  try_load("glTexImage2D");
                awml_glDrawBuffer                                  = (PFNGLDRAWBUFFERPROC)                                  try_load("glDrawBuffer");
                awml_glClear                                       = (PFNGLCLEARPROC)                                       try_load("glClear");
                awml_glClearColor                                  = (PFNGLCLEARCOLORPROC)                                  try_load("glClearColor");
                awml_glClearStencil                                = (PFNGLCLEARSTENCILPROC)                                try_load("glClearStencil");
                awml_glClearDepth                                  = (PFNGLCLEARDEPTHPROC)                                  try_load("glClearDepth");
                awml_glStencilMask                                 = (PFNGLSTENCILMASKPROC)                                 try_load("glStencilMask");
                awml_glColorMask                                   = (PFNGLCOLORMASKPROC)                                   try_load("glColorMask");
                awml_glDepthMask                                   = (PFNGLDEPTHMASKPROC)                                   try_load("glDepthMask");
                awml_glDisable                                     = (PFNGLDISABLEPROC)                                     try_load("glDisable");
                awml_glEnable                                      = (PFNGLENABLEPROC)                                      try_load("glEnable");
                awml_glFinish                                      = (PFNGLFINISHPROC)                                      try_load("glFinish");
                awml_glFlush                                       = (PFNGLFLUSHPROC)                                       try_load("glFlush");
                awml_glBlendFunc                                   = (PFNGLBLENDFUNCPROC)                                   try_load("glBlendFunc");
                awml_glLogicOp                                     = (PFNGLLOGICOPPROC)                                     try_load("glLogicOp");
                awml_glStencilFunc                                 = (PFNGLSTENCILFUNCPROC)                                 try_load("glStencilFunc");
                awml_glStencilOp                                   = (PFNGLSTENCILOPPROC)                                   try_load("glStencilOp");
                awml_glDepthFunc                                   = (PFNGLDEPTHFUNCPROC)                                   try_load("glDepthFunc");
                awml_glPixelStoref                                 = (PFNGLPIXELSTOREFPROC)                                 try_load("glPixelStoref");
                awml_glPixelStorei                                 = (PFNGLPIXELSTOREIPROC)                                 try_load("glPixelStorei");
                awml_glReadBuffer                                  = (PFNGLREADBUFFERPROC)                                  try_load("glReadBuffer");
                awml_glReadPixels                                  = (PFNGLREADPIXELSPROC)                                  try_load("glReadPixels");
                awml_glGetBooleanv                                 = (PFNGLGETBOOLEANVPROC)                                 try_load("glGetBooleanv");
                awml_glGetDoublev                                  = (PFNGLGETDOUBLEVPROC)                                  try_load("glGetDoublev");
                awml_glGetError                                    = (PFNGLGETERRORPROC)                                    try_load("glGetError");
                awml_glGetFloatv                                   = (PFNGLGETFLOATVPROC)                                   try_load("glGetFloatv");
                awml_glGetIntegerv                                 = (PFNGLGETINTEGERVPROC)                                 try_load("glGetIntegerv");
                awml_glGetTexImage                                 = (PFNGLGETTEXIMAGEPROC)                                 try_load("glGetTexImage");
                awml_glGetTexParameterfv                           = (PFNGLGETTEXPARAMETERFVPROC)                           try_load("glGetTexParameterfv");
                awml_glGetTexParameteriv                           = (PFNGLGETTEXPARAMETERIVPROC)                           try_load("glGetTexParameteriv");
                awml_glGetTexLevelParameterfv                      = (PFNGLGETTEXLEVELPARAMETERFVPROC)                      try_load("glGetTexLevelParameterfv");
                awml_glGetTexLevelParameteriv                      = (PFNGLGETTEXLEVELPARAMETERIVPROC)                      try_load("glGetTexLevelParameteriv");
                awml_glIsEnabled                                   = (PFNGLISENABLEDPROC)                                   try_load("glIsEnabled");
                awml_glDepthRange                                  = (PFNGLDEPTHRANGEPROC)                                  try_load("glDepthRange");
                awml_glViewport                                    = (PFNGLVIEWPORTPROC)                                    try_load("glViewport");
            }
            if (major >= 1 && minor >= 1)
            {
                awml_glDrawArrays                                  = (PFNGLDRAWARRAYSPROC)                                  try_load("glDrawArrays");
                awml_glDrawElements                                = (PFNGLDRAWELEMENTSPROC)                                try_load("glDrawElements");
                awml_glGetPointerv                                 = (PFNGLGETPOINTERVPROC)                                 try_load("glGetPointerv");
                awml_glPolygonOffset                               = (PFNGLPOLYGONOFFSETPROC)                               try_load("glPolygonOffset");
                awml_glCopyTexImage1D                              = (PFNGLCOPYTEXIMAGE1DPROC)                              try_load("glCopyTexImage1D");
                awml_glCopyTexImage2D                              = (PFNGLCOPYTEXIMAGE2DPROC)                              try_load("glCopyTexImage2D");
                awml_glCopyTexSubImage1D                           = (PFNGLCOPYTEXSUBIMAGE1DPROC)                           try_load("glCopyTexSubImage1D");
                awml_glCopyTexSubImage2D                           = (PFNGLCOPYTEXSUBIMAGE2DPROC)                           try_load("glCopyTexSubImage2D");
                awml_glTexSubImage1D                               = (PFNGLTEXSUBIMAGE1DPROC)                               try_load("glTexSubImage1D");
                awml_glTexSubImage2D                               = (PFNGLTEXSUBIMAGE2DPROC)                               try_load("glTexSubImage2D");
                awml_glBindTexture                                 = (PFNGLBINDTEXTUREPROC)                                 try_load("glBindTexture");
                awml_glDeleteTextures                              = (PFNGLDELETETEXTURESPROC)                              try_load("glDeleteTextures");
                awml_glGenTextures                                 = (PFNGLGENTEXTURESPROC)                                 try_load("glGenTextures");
                awml_glIsTexture                                   = (PFNGLISTEXTUREPROC)                                   try_load("glIsTexture");
            }
            if (major >= 1 && minor >= 2)
            {
                awml_glDrawRangeElements                           = (PFNGLDRAWRANGEELEMENTSPROC)                           try_load("glDrawRangeElements");
                awml_glTexImage3D                                  = (PFNGLTEXIMAGE3DPROC)                                  try_load("glTexImage3D");
                awml_glTexSubImage3D                               = (PFNGLTEXSUBIMAGE3DPROC)                               try_load("glTexSubImage3D");
                awml_glCopyTexSubImage3D                           = (PFNGLCOPYTEXSUBIMAGE3DPROC)                           try_load("glCopyTexSubImage3D");
            }
            if (major >= 1 && minor >= 3)
            {
                awml_glActiveTexture                               = (PFNGLACTIVETEXTUREPROC)                               try_load("glActiveTexture");
                awml_glSampleCoverage                              = (PFNGLSAMPLECOVERAGEPROC)                              try_load("glSampleCoverage");
                awml_glCompressedTexImage3D                        = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)                        try_load("glCompressedTexImage3D");
                awml_glCompressedTexImage2D                        = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)                        try_load("glCompressedTexImage2D");
                awml_glCompressedTexImage1D                        = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)                        try_load("glCompressedTexImage1D");
                awml_glCompressedTexSubImage3D                     = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)                     try_load("glCompressedTexSubImage3D");
                awml_glCompressedTexSubImage2D                     = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)                     try_load("glCompressedTexSubImage2D");
                awml_glCompressedTexSubImage1D                     = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)                     try_load("glCompressedTexSubImage1D");
                awml_glGetCompressedTexImage                       = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)                       try_load("glGetCompressedTexImage");
            }
            if (major >= 1 && minor >= 4)
            {
                awml_glBlendFuncSeparate                           = (PFNGLBLENDFUNCSEPARATEPROC)                           try_load("glBlendFuncSeparate");
                awml_glMultiDrawArrays                             = (PFNGLMULTIDRAWARRAYSPROC)                             try_load("glMultiDrawArrays");
                awml_glMultiDrawElements                           = (PFNGLMULTIDRAWELEMENTSPROC)                           try_load("glMultiDrawElements");
                awml_glPointParameterf                             = (PFNGLPOINTPARAMETERFPROC)                             try_load("glPointParameterf");
                awml_glPointParameterfv                            = (PFNGLPOINTPARAMETERFVPROC)                            try_load("glPointParameterfv");
                awml_glPointParameteri                             = (PFNGLPOINTPARAMETERIPROC)                             try_load("glPointParameteri");
                awml_glPointParameteriv                            = (PFNGLPOINTPARAMETERIVPROC)                            try_load("glPointParameteriv");
                awml_glBlendColor                                  = (PFNGLBLENDCOLORPROC)                                  try_load("glBlendColor");
                awml_glBlendEquation                               = (PFNGLBLENDEQUATIONPROC)                               try_load("glBlendEquation");
            }
            if (major >= 1 && minor >= 5)
            {
                awml_glGenQueries                                  = (PFNGLGENQUERIESPROC)                                  try_load("glGenQueries");
                awml_glDeleteQueries                               = (PFNGLDELETEQUERIESPROC)                               try_load("glDeleteQueries");
                awml_glIsQuery                                     = (PFNGLISQUERYPROC)                                     try_load("glIsQuery");
                awml_glBeginQuery                                  = (PFNGLBEGINQUERYPROC)                                  try_load("glBeginQuery");
                awml_glEndQuery                                    = (PFNGLENDQUERYPROC)                                    try_load("glEndQuery");
                awml_glGetQueryiv                                  = (PFNGLGETQUERYIVPROC)                                  try_load("glGetQueryiv");
                awml_glGetQueryObjectiv                            = (PFNGLGETQUERYOBJECTIVPROC)                            try_load("glGetQueryObjectiv");
                awml_glGetQueryObjectuiv                           = (PFNGLGETQUERYOBJECTUIVPROC)                           try_load("glGetQueryObjectuiv");
                awml_glBindBuffer                                  = (PFNGLBINDBUFFERPROC)                                  try_load("glBindBuffer");
                awml_glDeleteBuffers                               = (PFNGLDELETEBUFFERSPROC)                               try_load("glDeleteBuffers");
                awml_glGenBuffers                                  = (PFNGLGENBUFFERSPROC)                                  try_load("glGenBuffers");
                awml_glIsBuffer                                    = (PFNGLISBUFFERPROC)                                    try_load("glIsBuffer");
                awml_glBufferData                                  = (PFNGLBUFFERDATAPROC)                                  try_load("glBufferData");
                awml_glBufferSubData                               = (PFNGLBUFFERSUBDATAPROC)                               try_load("glBufferSubData");
                awml_glGetBufferSubData                            = (PFNGLGETBUFFERSUBDATAPROC)                            try_load("glGetBufferSubData");
                awml_glMapBuffer                                   = (PFNGLMAPBUFFERPROC)                                   try_load("glMapBuffer");
                awml_glUnmapBuffer                                 = (PFNGLUNMAPBUFFERPROC)                                 try_load("glUnmapBuffer");
                awml_glGetBufferParameteriv                        = (PFNGLGETBUFFERPARAMETERIVPROC)                        try_load("glGetBufferParameteriv");
                awml_glGetBufferPointerv                           = (PFNGLGETBUFFERPOINTERVPROC)                           try_load("glGetBufferPointerv");
            }
            if (major >= 2)
            {
                awml_glBlendEquationSeparate                       = (PFNGLBLENDEQUATIONSEPARATEPROC)                       try_load("glBlendEquationSeparate");
                awml_glDrawBuffers                                 = (PFNGLDRAWBUFFERSPROC)                                 try_load("glDrawBuffers");
                awml_glStencilOpSeparate                           = (PFNGLSTENCILOPSEPARATEPROC)                           try_load("glStencilOpSeparate");
                awml_glStencilFuncSeparate                         = (PFNGLSTENCILFUNCSEPARATEPROC)                         try_load("glStencilFuncSeparate");
                awml_glStencilMaskSeparate                         = (PFNGLSTENCILMASKSEPARATEPROC)                         try_load("glStencilMaskSeparate");
                awml_glAttachShader                                = (PFNGLATTACHSHADERPROC)                                try_load("glAttachShader");
                awml_glBindAttribLocation                          = (PFNGLBINDATTRIBLOCATIONPROC)                          try_load("glBindAttribLocation");
                awml_glCompileShader                               = (PFNGLCOMPILESHADERPROC)                               try_load("glCompileShader");
                awml_glCreateProgram                               = (PFNGLCREATEPROGRAMPROC)                               try_load("glCreateProgram");
                awml_glCreateShader                                = (PFNGLCREATESHADERPROC)                                try_load("glCreateShader");
                awml_glDeleteProgram                               = (PFNGLDELETEPROGRAMPROC)                               try_load("glDeleteProgram");
                awml_glDeleteShader                                = (PFNGLDELETESHADERPROC)                                try_load("glDeleteShader");
                awml_glDetachShader                                = (PFNGLDETACHSHADERPROC)                                try_load("glDetachShader");
                awml_glDisableVertexAttribArray                    = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)                    try_load("glDisableVertexAttribArray");
                awml_glEnableVertexAttribArray                     = (PFNGLENABLEVERTEXATTRIBARRAYPROC)                     try_load("glEnableVertexAttribArray");
                awml_glGetActiveAttrib                             = (PFNGLGETACTIVEATTRIBPROC)                             try_load("glGetActiveAttrib");
                awml_glGetActiveUniform                            = (PFNGLGETACTIVEUNIFORMPROC)                            try_load("glGetActiveUniform");
                awml_glGetAttachedShaders                          = (PFNGLGETATTACHEDSHADERSPROC)                          try_load("glGetAttachedShaders");
                awml_glGetAttribLocation                           = (PFNGLGETATTRIBLOCATIONPROC)                           try_load("glGetAttribLocation");
                awml_glGetProgramiv                                = (PFNGLGETPROGRAMIVPROC)                                try_load("glGetProgramiv");
                awml_glGetProgramInfoLog                           = (PFNGLGETPROGRAMINFOLOGPROC)                           try_load("glGetProgramInfoLog");
                awml_glGetShaderiv                                 = (PFNGLGETSHADERIVPROC)                                 try_load("glGetShaderiv");
                awml_glGetShaderInfoLog                            = (PFNGLGETSHADERINFOLOGPROC)                            try_load("glGetShaderInfoLog");
                awml_glGetShaderSource                             = (PFNGLGETSHADERSOURCEPROC)                             try_load("glGetShaderSource");
                awml_glGetUniformLocation                          = (PFNGLGETUNIFORMLOCATIONPROC)                          try_load("glGetUniformLocation");
                awml_glGetUniformfv                                = (PFNGLGETUNIFORMFVPROC)                                try_load("glGetUniformfv");
                awml_glGetUniformiv                                = (PFNGLGETUNIFORMIVPROC)                                try_load("glGetUniformiv");
                awml_glGetVertexAttribdv                           = (PFNGLGETVERTEXATTRIBDVPROC)                           try_load("glGetVertexAttribdv");
                awml_glGetVertexAttribfv                           = (PFNGLGETVERTEXATTRIBFVPROC)                           try_load("glGetVertexAttribfv");
                awml_glGetVertexAttribiv                           = (PFNGLGETVERTEXATTRIBIVPROC)                           try_load("glGetVertexAttribiv");
                awml_glGetVertexAttribPointerv                     = (PFNGLGETVERTEXATTRIBPOINTERVPROC)                     try_load("glGetVertexAttribPointerv");
                awml_glIsProgram                                   = (PFNGLISPROGRAMPROC)                                   try_load("glIsProgram");
                awml_glIsShader                                    = (PFNGLISSHADERPROC)                                    try_load("glIsShader");
                awml_glLinkProgram                                 = (PFNGLLINKPROGRAMPROC)                                 try_load("glLinkProgram");
                awml_glShaderSource                                = (PFNGLSHADERSOURCEPROC)                                try_load("glShaderSource");
                awml_glUseProgram                                  = (PFNGLUSEPROGRAMPROC)                                  try_load("glUseProgram");
                awml_glUniform1f                                   = (PFNGLUNIFORM1FPROC)                                   try_load("glUniform1f");
                awml_glUniform2f                                   = (PFNGLUNIFORM2FPROC)                                   try_load("glUniform2f");
                awml_glUniform3f                                   = (PFNGLUNIFORM3FPROC)                                   try_load("glUniform3f");
                awml_glUniform4f                                   = (PFNGLUNIFORM4FPROC)                                   try_load("glUniform4f");
                awml_glUniform1i                                   = (PFNGLUNIFORM1IPROC)                                   try_load("glUniform1i");
                awml_glUniform2i                                   = (PFNGLUNIFORM2IPROC)                                   try_load("glUniform2i");
                awml_glUniform3i                                   = (PFNGLUNIFORM3IPROC)                                   try_load("glUniform3i");
                awml_glUniform4i                                   = (PFNGLUNIFORM4IPROC)                                   try_load("glUniform4i");
                awml_glUniform1fv                                  = (PFNGLUNIFORM1FVPROC)                                  try_load("glUniform1fv");
                awml_glUniform2fv                                  = (PFNGLUNIFORM2FVPROC)                                  try_load("glUniform2fv");
                awml_glUniform3fv                                  = (PFNGLUNIFORM3FVPROC)                                  try_load("glUniform3fv");
                awml_glUniform4fv                                  = (PFNGLUNIFORM4FVPROC)                                  try_load("glUniform4fv");
                awml_glUniform1iv                                  = (PFNGLUNIFORM1IVPROC)                                  try_load("glUniform1iv");
                awml_glUniform2iv                                  = (PFNGLUNIFORM2IVPROC)                                  try_load("glUniform2iv");
                awml_glUniform3iv                                  = (PFNGLUNIFORM3IVPROC)                                  try_load("glUniform3iv");
                awml_glUniform4iv                                  = (PFNGLUNIFORM4IVPROC)                                  try_load("glUniform4iv");
                awml_glUniformMatrix2fv                            = (PFNGLUNIFORMMATRIX2FVPROC)                            try_load("glUniformMatrix2fv");
                awml_glUniformMatrix3fv                            = (PFNGLUNIFORMMATRIX3FVPROC)                            try_load("glUniformMatrix3fv");
                awml_glUniformMatrix4fv                            = (PFNGLUNIFORMMATRIX4FVPROC)                            try_load("glUniformMatrix4fv");
                awml_glValidateProgram                             = (PFNGLVALIDATEPROGRAMPROC)                             try_load("glValidateProgram");
                awml_glVertexAttrib1d                              = (PFNGLVERTEXATTRIB1DPROC)                              try_load("glVertexAttrib1d");
                awml_glVertexAttrib1dv                             = (PFNGLVERTEXATTRIB1DVPROC)                             try_load("glVertexAttrib1dv");
                awml_glVertexAttrib1f                              = (PFNGLVERTEXATTRIB1FPROC)                              try_load("glVertexAttrib1f");
                awml_glVertexAttrib1fv                             = (PFNGLVERTEXATTRIB1FVPROC)                             try_load("glVertexAttrib1fv");
                awml_glVertexAttrib1s                              = (PFNGLVERTEXATTRIB1SPROC)                              try_load("glVertexAttrib1s");
                awml_glVertexAttrib1sv                             = (PFNGLVERTEXATTRIB1SVPROC)                             try_load("glVertexAttrib1sv");
                awml_glVertexAttrib2d                              = (PFNGLVERTEXATTRIB2DPROC)                              try_load("glVertexAttrib2d");
                awml_glVertexAttrib2dv                             = (PFNGLVERTEXATTRIB2DVPROC)                             try_load("glVertexAttrib2dv");
                awml_glVertexAttrib2f                              = (PFNGLVERTEXATTRIB2FPROC)                              try_load("glVertexAttrib2f");
                awml_glVertexAttrib2fv                             = (PFNGLVERTEXATTRIB2FVPROC)                             try_load("glVertexAttrib2fv");
                awml_glVertexAttrib2s                              = (PFNGLVERTEXATTRIB2SPROC)                              try_load("glVertexAttrib2s");
                awml_glVertexAttrib2sv                             = (PFNGLVERTEXATTRIB2SVPROC)                             try_load("glVertexAttrib2sv");
                awml_glVertexAttrib3d                              = (PFNGLVERTEXATTRIB3DPROC)                              try_load("glVertexAttrib3d");
                awml_glVertexAttrib3dv                             = (PFNGLVERTEXATTRIB3DVPROC)                             try_load("glVertexAttrib3dv");
                awml_glVertexAttrib3f                              = (PFNGLVERTEXATTRIB3FPROC)                              try_load("glVertexAttrib3f");
                awml_glVertexAttrib3fv                             = (PFNGLVERTEXATTRIB3FVPROC)                             try_load("glVertexAttrib3fv");
                awml_glVertexAttrib3s                              = (PFNGLVERTEXATTRIB3SPROC)                              try_load("glVertexAttrib3s");
                awml_glVertexAttrib3sv                             = (PFNGLVERTEXATTRIB3SVPROC)                             try_load("glVertexAttrib3sv");
                awml_glVertexAttrib4Nbv                            = (PFNGLVERTEXATTRIB4NBVPROC)                            try_load("glVertexAttrib4Nbv");
                awml_glVertexAttrib4Niv                            = (PFNGLVERTEXATTRIB4NIVPROC)                            try_load("glVertexAttrib4Niv");
                awml_glVertexAttrib4Nsv                            = (PFNGLVERTEXATTRIB4NSVPROC)                            try_load("glVertexAttrib4Nsv");
                awml_glVertexAttrib4Nub                            = (PFNGLVERTEXATTRIB4NUBPROC)                            try_load("glVertexAttrib4Nub");
                awml_glVertexAttrib4Nubv                           = (PFNGLVERTEXATTRIB4NUBVPROC)                           try_load("glVertexAttrib4Nubv");
                awml_glVertexAttrib4Nuiv                           = (PFNGLVERTEXATTRIB4NUIVPROC)                           try_load("glVertexAttrib4Nuiv");
                awml_glVertexAttrib4Nusv                           = (PFNGLVERTEXATTRIB4NUSVPROC)                           try_load("glVertexAttrib4Nusv");
                awml_glVertexAttrib4bv                             = (PFNGLVERTEXATTRIB4BVPROC)                             try_load("glVertexAttrib4bv");
                awml_glVertexAttrib4d                              = (PFNGLVERTEXATTRIB4DPROC)                              try_load("glVertexAttrib4d");
                awml_glVertexAttrib4dv                             = (PFNGLVERTEXATTRIB4DVPROC)                             try_load("glVertexAttrib4dv");
                awml_glVertexAttrib4f                              = (PFNGLVERTEXATTRIB4FPROC)                              try_load("glVertexAttrib4f");
                awml_glVertexAttrib4fv                             = (PFNGLVERTEXATTRIB4FVPROC)                             try_load("glVertexAttrib4fv");
                awml_glVertexAttrib4iv                             = (PFNGLVERTEXATTRIB4IVPROC)                             try_load("glVertexAttrib4iv");
                awml_glVertexAttrib4s                              = (PFNGLVERTEXATTRIB4SPROC)                              try_load("glVertexAttrib4s");
                awml_glVertexAttrib4sv                             = (PFNGLVERTEXATTRIB4SVPROC)                             try_load("glVertexAttrib4sv");
                awml_glVertexAttrib4ubv                            = (PFNGLVERTEXATTRIB4UBVPROC)                            try_load("glVertexAttrib4ubv");
                awml_glVertexAttrib4uiv                            = (PFNGLVERTEXATTRIB4UIVPROC)                            try_load("glVertexAttrib4uiv");
                awml_glVertexAttrib4usv                            = (PFNGLVERTEXATTRIB4USVPROC)                            try_load("glVertexAttrib4usv");
                awml_glVertexAttribPointer                         = (PFNGLVERTEXATTRIBPOINTERPROC)                         try_load("glVertexAttribPointer");
            }
            if (major >= 2 && minor >= 1)
            {
                awml_glUniformMatrix2x3fv                          = (PFNGLUNIFORMMATRIX2X3FVPROC)                          try_load("glUniformMatrix2x3fv");
                awml_glUniformMatrix3x2fv                          = (PFNGLUNIFORMMATRIX3X2FVPROC)                          try_load("glUniformMatrix3x2fv");
                awml_glUniformMatrix2x4fv                          = (PFNGLUNIFORMMATRIX2X4FVPROC)                          try_load("glUniformMatrix2x4fv");
                awml_glUniformMatrix4x2fv                          = (PFNGLUNIFORMMATRIX4X2FVPROC)                          try_load("glUniformMatrix4x2fv");
                awml_glUniformMatrix3x4fv                          = (PFNGLUNIFORMMATRIX3X4FVPROC)                          try_load("glUniformMatrix3x4fv");
                awml_glUniformMatrix4x3fv                          = (PFNGLUNIFORMMATRIX4X3FVPROC)                          try_load("glUniformMatrix4x3fv");
            }
            if (major >= 3)
            {
                awml_glColorMaski                                  = (PFNGLCOLORMASKIPROC)                                  try_load("glColorMaski");
                awml_glGetBooleani_v                               = (PFNGLGETBOOLEANI_VPROC)                               try_load("glGetBooleani_v");
                awml_glGetIntegeri_v                               = (PFNGLGETINTEGERI_VPROC)                               try_load("glGetIntegeri_v");
                awml_glEnablei                                     = (PFNGLENABLEIPROC)                                     try_load("glEnablei");
                awml_glDisablei                                    = (PFNGLDISABLEIPROC)                                    try_load("glDisablei");
                awml_glIsEnabledi                                  = (PFNGLISENABLEDIPROC)                                  try_load("glIsEnabledi");
                awml_glBeginTransformFeedback                      = (PFNGLBEGINTRANSFORMFEEDBACKPROC)                      try_load("glBeginTransformFeedback");
                awml_glEndTransformFeedback                        = (PFNGLENDTRANSFORMFEEDBACKPROC)                        try_load("glEndTransformFeedback");
                awml_glBindBufferRange                             = (PFNGLBINDBUFFERRANGEPROC)                             try_load("glBindBufferRange");
                awml_glBindBufferBase                              = (PFNGLBINDBUFFERBASEPROC)                              try_load("glBindBufferBase");
                awml_glTransformFeedbackVaryings                   = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)                   try_load("glTransformFeedbackVaryings");
                awml_glGetTransformFeedbackVarying                 = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)                 try_load("glGetTransformFeedbackVarying");
                awml_glClampColor                                  = (PFNGLCLAMPCOLORPROC)                                  try_load("glClampColor");
                awml_glBeginConditionalRender                      = (PFNGLBEGINCONDITIONALRENDERPROC)                      try_load("glBeginConditionalRender");
                awml_glEndConditionalRender                        = (PFNGLENDCONDITIONALRENDERPROC)                        try_load("glEndConditionalRender");
                awml_glVertexAttribIPointer                        = (PFNGLVERTEXATTRIBIPOINTERPROC)                        try_load("glVertexAttribIPointer");
                awml_glGetVertexAttribIiv                          = (PFNGLGETVERTEXATTRIBIIVPROC)                          try_load("glGetVertexAttribIiv");
                awml_glGetVertexAttribIuiv                         = (PFNGLGETVERTEXATTRIBIUIVPROC)                         try_load("glGetVertexAttribIuiv");
                awml_glVertexAttribI1i                             = (PFNGLVERTEXATTRIBI1IPROC)                             try_load("glVertexAttribI1i");
                awml_glVertexAttribI2i                             = (PFNGLVERTEXATTRIBI2IPROC)                             try_load("glVertexAttribI2i");
                awml_glVertexAttribI3i                             = (PFNGLVERTEXATTRIBI3IPROC)                             try_load("glVertexAttribI3i");
                awml_glVertexAttribI4i                             = (PFNGLVERTEXATTRIBI4IPROC)                             try_load("glVertexAttribI4i");
                awml_glVertexAttribI1ui                            = (PFNGLVERTEXATTRIBI1UIPROC)                            try_load("glVertexAttribI1ui");
                awml_glVertexAttribI2ui                            = (PFNGLVERTEXATTRIBI2UIPROC)                            try_load("glVertexAttribI2ui");
                awml_glVertexAttribI3ui                            = (PFNGLVERTEXATTRIBI3UIPROC)                            try_load("glVertexAttribI3ui");
                awml_glVertexAttribI4ui                            = (PFNGLVERTEXATTRIBI4UIPROC)                            try_load("glVertexAttribI4ui");
                awml_glVertexAttribI1iv                            = (PFNGLVERTEXATTRIBI1IVPROC)                            try_load("glVertexAttribI1iv");
                awml_glVertexAttribI2iv                            = (PFNGLVERTEXATTRIBI2IVPROC)                            try_load("glVertexAttribI2iv");
                awml_glVertexAttribI3iv                            = (PFNGLVERTEXATTRIBI3IVPROC)                            try_load("glVertexAttribI3iv");
                awml_glVertexAttribI4iv                            = (PFNGLVERTEXATTRIBI4IVPROC)                            try_load("glVertexAttribI4iv");
                awml_glVertexAttribI1uiv                           = (PFNGLVERTEXATTRIBI1UIVPROC)                           try_load("glVertexAttribI1uiv");
                awml_glVertexAttribI2uiv                           = (PFNGLVERTEXATTRIBI2UIVPROC)                           try_load("glVertexAttribI2uiv");
                awml_glVertexAttribI3uiv                           = (PFNGLVERTEXATTRIBI3UIVPROC)                           try_load("glVertexAttribI3uiv");
                awml_glVertexAttribI4uiv                           = (PFNGLVERTEXATTRIBI4UIVPROC)                           try_load("glVertexAttribI4uiv");
                awml_glVertexAttribI4bv                            = (PFNGLVERTEXATTRIBI4BVPROC)                            try_load("glVertexAttribI4bv");
                awml_glVertexAttribI4sv                            = (PFNGLVERTEXATTRIBI4SVPROC)                            try_load("glVertexAttribI4sv");
                awml_glVertexAttribI4ubv                           = (PFNGLVERTEXATTRIBI4UBVPROC)                           try_load("glVertexAttribI4ubv");
                awml_glVertexAttribI4usv                           = (PFNGLVERTEXATTRIBI4USVPROC)                           try_load("glVertexAttribI4usv");
                awml_glGetUniformuiv                               = (PFNGLGETUNIFORMUIVPROC)                               try_load("glGetUniformuiv");
                awml_glBindFragDataLocation                        = (PFNGLBINDFRAGDATALOCATIONPROC)                        try_load("glBindFragDataLocation");
                awml_glGetFragDataLocation                         = (PFNGLGETFRAGDATALOCATIONPROC)                         try_load("glGetFragDataLocation");
                awml_glUniform1ui                                  = (PFNGLUNIFORM1UIPROC)                                  try_load("glUniform1ui");
                awml_glUniform2ui                                  = (PFNGLUNIFORM2UIPROC)                                  try_load("glUniform2ui");
                awml_glUniform3ui                                  = (PFNGLUNIFORM3UIPROC)                                  try_load("glUniform3ui");
                awml_glUniform4ui                                  = (PFNGLUNIFORM4UIPROC)                                  try_load("glUniform4ui");
                awml_glUniform1uiv                                 = (PFNGLUNIFORM1UIVPROC)                                 try_load("glUniform1uiv");
                awml_glUniform2uiv                                 = (PFNGLUNIFORM2UIVPROC)                                 try_load("glUniform2uiv");
                awml_glUniform3uiv                                 = (PFNGLUNIFORM3UIVPROC)                                 try_load("glUniform3uiv");
                awml_glUniform4uiv                                 = (PFNGLUNIFORM4UIVPROC)                                 try_load("glUniform4uiv");
                awml_glTexParameterIiv                             = (PFNGLTEXPARAMETERIIVPROC)                             try_load("glTexParameterIiv");
                awml_glTexParameterIuiv                            = (PFNGLTEXPARAMETERIUIVPROC)                            try_load("glTexParameterIuiv");
                awml_glGetTexParameterIiv                          = (PFNGLGETTEXPARAMETERIIVPROC)                          try_load("glGetTexParameterIiv");
                awml_glGetTexParameterIuiv                         = (PFNGLGETTEXPARAMETERIUIVPROC)                         try_load("glGetTexParameterIuiv");
                awml_glClearBufferiv                               = (PFNGLCLEARBUFFERIVPROC)                               try_load("glClearBufferiv");
                awml_glClearBufferuiv                              = (PFNGLCLEARBUFFERUIVPROC)                              try_load("glClearBufferuiv");
                awml_glClearBufferfv                               = (PFNGLCLEARBUFFERFVPROC)                               try_load("glClearBufferfv");
                awml_glClearBufferfi                               = (PFNGLCLEARBUFFERFIPROC)                               try_load("glClearBufferfi");
                awml_glGetStringi                                  = (PFNGLGETSTRINGIPROC)                                  try_load("glGetStringi");
                awml_glIsRenderbuffer                              = (PFNGLISRENDERBUFFERPROC)                              try_load("glIsRenderbuffer");
                awml_glBindRenderbuffer                            = (PFNGLBINDRENDERBUFFERPROC)                            try_load("glBindRenderbuffer");
                awml_glDeleteRenderbuffers                         = (PFNGLDELETERENDERBUFFERSPROC)                         try_load("glDeleteRenderbuffers");
                awml_glGenRenderbuffers                            = (PFNGLGENRENDERBUFFERSPROC)                            try_load("glGenRenderbuffers");
                awml_glRenderbufferStorage                         = (PFNGLRENDERBUFFERSTORAGEPROC)                         try_load("glRenderbufferStorage");
                awml_glGetRenderbufferParameteriv                  = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)                  try_load("glGetRenderbufferParameteriv");
                awml_glIsFramebuffer                               = (PFNGLISFRAMEBUFFERPROC)                               try_load("glIsFramebuffer");
                awml_glBindFramebuffer                             = (PFNGLBINDFRAMEBUFFERPROC)                             try_load("glBindFramebuffer");
                awml_glDeleteFramebuffers                          = (PFNGLDELETEFRAMEBUFFERSPROC)                          try_load("glDeleteFramebuffers");
                awml_glGenFramebuffers                             = (PFNGLGENFRAMEBUFFERSPROC)                             try_load("glGenFramebuffers");
                awml_glCheckFramebufferStatus                      = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)                      try_load("glCheckFramebufferStatus");
                awml_glFramebufferTexture1D                        = (PFNGLFRAMEBUFFERTEXTURE1DPROC)                        try_load("glFramebufferTexture1D");
                awml_glFramebufferTexture2D                        = (PFNGLFRAMEBUFFERTEXTURE2DPROC)                        try_load("glFramebufferTexture2D");
                awml_glFramebufferTexture3D                        = (PFNGLFRAMEBUFFERTEXTURE3DPROC)                        try_load("glFramebufferTexture3D");
                awml_glFramebufferRenderbuffer                     = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)                     try_load("glFramebufferRenderbuffer");
                awml_glGetFramebufferAttachmentParameteriv         = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)         try_load("glGetFramebufferAttachmentParameteriv");
                awml_glGenerateMipmap                              = (PFNGLGENERATEMIPMAPPROC)                              try_load("glGenerateMipmap");
                awml_glBlitFramebuffer                             = (PFNGLBLITFRAMEBUFFERPROC)                             try_load("glBlitFramebuffer");
                awml_glRenderbufferStorageMultisample              = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)              try_load("glRenderbufferStorageMultisample");
                awml_glFramebufferTextureLayer                     = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)                     try_load("glFramebufferTextureLayer");
                awml_glMapBufferRange                              = (PFNGLMAPBUFFERRANGEPROC)                              try_load("glMapBufferRange");
                awml_glFlushMappedBufferRange                      = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)                      try_load("glFlushMappedBufferRange");
                awml_glBindVertexArray                             = (PFNGLBINDVERTEXARRAYPROC)                             try_load("glBindVertexArray");
                awml_glDeleteVertexArrays                          = (PFNGLDELETEVERTEXARRAYSPROC)                          try_load("glDeleteVertexArrays");
                awml_glGenVertexArrays                             = (PFNGLGENVERTEXARRAYSPROC)                             try_load("glGenVertexArrays");
                awml_glIsVertexArray                               = (PFNGLISVERTEXARRAYPROC)                               try_load("glIsVertexArray");
            }
            if (major >= 3 && minor >= 1)
            {
                awml_glDrawArraysInstanced                         = (PFNGLDRAWARRAYSINSTANCEDPROC)                         try_load("glDrawArraysInstanced");
                awml_glDrawElementsInstanced                       = (PFNGLDRAWELEMENTSINSTANCEDPROC)                       try_load("glDrawElementsInstanced");
                awml_glTexBuffer                                   = (PFNGLTEXBUFFERPROC)                                   try_load("glTexBuffer");
                awml_glPrimitiveRestartIndex                       = (PFNGLPRIMITIVERESTARTINDEXPROC)                       try_load("glPrimitiveRestartIndex");
                awml_glCopyBufferSubData                           = (PFNGLCOPYBUFFERSUBDATAPROC)                           try_load("glCopyBufferSubData");
                awml_glGetUniformIndices                           = (PFNGLGETUNIFORMINDICESPROC)                           try_load("glGetUniformIndices");
                awml_glGetActiveUniformsiv                         = (PFNGLGETACTIVEUNIFORMSIVPROC)                         try_load("glGetActiveUniformsiv");
                awml_glGetActiveUniformName                        = (PFNGLGETACTIVEUNIFORMNAMEPROC)                        try_load("glGetActiveUniformName");
                awml_glGetUniformBlockIndex                        = (PFNGLGETUNIFORMBLOCKINDEXPROC)                        try_load("glGetUniformBlockIndex");
                awml_glGetActiveUniformBlockiv                     = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)                     try_load("glGetActiveUniformBlockiv");
                awml_glGetActiveUniformBlockName                   = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)                   try_load("glGetActiveUniformBlockName");
                awml_glUniformBlockBinding                         = (PFNGLUNIFORMBLOCKBINDINGPROC)                         try_load("glUniformBlockBinding");
            }
            if (major >= 3 && minor >= 2)
            {
                awml_glDrawElementsBaseVertex                      = (PFNGLDRAWELEMENTSBASEVERTEXPROC)                      try_load("glDrawElementsBaseVertex");
                awml_glDrawRangeElementsBaseVertex                 = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)                 try_load("glDrawRangeElementsBaseVertex");
                awml_glDrawElementsInstancedBaseVertex             = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)             try_load("glDrawElementsInstancedBaseVertex");
                awml_glMultiDrawElementsBaseVertex                 = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)                 try_load("glMultiDrawElementsBaseVertex");
                awml_glProvokingVertex                             = (PFNGLPROVOKINGVERTEXPROC)                             try_load("glProvokingVertex");
                awml_glFenceSync                                   = (PFNGLFENCESYNCPROC)                                   try_load("glFenceSync");
                awml_glIsSync                                      = (PFNGLISSYNCPROC)                                      try_load("glIsSync");
                awml_glDeleteSync                                  = (PFNGLDELETESYNCPROC)                                  try_load("glDeleteSync");
                awml_glClientWaitSync                              = (PFNGLCLIENTWAITSYNCPROC)                              try_load("glClientWaitSync");
                awml_glWaitSync                                    = (PFNGLWAITSYNCPROC)                                    try_load("glWaitSync");
                awml_glGetInteger64v                               = (PFNGLGETINTEGER64VPROC)                               try_load("glGetInteger64v");
                awml_glGetSynciv                                   = (PFNGLGETSYNCIVPROC)                                   try_load("glGetSynciv");
                awml_glGetInteger64i_v                             = (PFNGLGETINTEGER64I_VPROC)                             try_load("glGetInteger64i_v");
                awml_glGetBufferParameteri64v                      = (PFNGLGETBUFFERPARAMETERI64VPROC)                      try_load("glGetBufferParameteri64v");
                awml_glFramebufferTexture                          = (PFNGLFRAMEBUFFERTEXTUREPROC)                          try_load("glFramebufferTexture");
                awml_glTexImage2DMultisample                       = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)                       try_load("glTexImage2DMultisample");
                awml_glTexImage3DMultisample                       = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)                       try_load("glTexImage3DMultisample");
                awml_glGetMultisamplefv                            = (PFNGLGETMULTISAMPLEFVPROC)                            try_load("glGetMultisamplefv");
                awml_glSampleMaski                                 = (PFNGLSAMPLEMASKIPROC)                                 try_load("glSampleMaski");
            }
            if (major >= 3 && minor >= 3)
            {
                awml_glBindFragDataLocationIndexed                 = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)                 try_load("glBindFragDataLocationIndexed");
                awml_glGetFragDataIndex                            = (PFNGLGETFRAGDATAINDEXPROC)                            try_load("glGetFragDataIndex");
                awml_glGenSamplers                                 = (PFNGLGENSAMPLERSPROC)                                 try_load("glGenSamplers");
                awml_glDeleteSamplers                              = (PFNGLDELETESAMPLERSPROC)                              try_load("glDeleteSamplers");
                awml_glIsSampler                                   = (PFNGLISSAMPLERPROC)                                   try_load("glIsSampler");
                awml_glBindSampler                                 = (PFNGLBINDSAMPLERPROC)                                 try_load("glBindSampler");
                awml_glSamplerParameteri                           = (PFNGLSAMPLERPARAMETERIPROC)                           try_load("glSamplerParameteri");
                awml_glSamplerParameteriv                          = (PFNGLSAMPLERPARAMETERIVPROC)                          try_load("glSamplerParameteriv");
                awml_glSamplerParameterf                           = (PFNGLSAMPLERPARAMETERFPROC)                           try_load("glSamplerParameterf");
                awml_glSamplerParameterfv                          = (PFNGLSAMPLERPARAMETERFVPROC)                          try_load("glSamplerParameterfv");
                awml_glSamplerParameterIiv                         = (PFNGLSAMPLERPARAMETERIIVPROC)                         try_load("glSamplerParameterIiv");
                awml_glSamplerParameterIuiv                        = (PFNGLSAMPLERPARAMETERIUIVPROC)                        try_load("glSamplerParameterIuiv");
                awml_glGetSamplerParameteriv                       = (PFNGLGETSAMPLERPARAMETERIVPROC)                       try_load("glGetSamplerParameteriv");
                awml_glGetSamplerParameterIiv                      = (PFNGLGETSAMPLERPARAMETERIIVPROC)                      try_load("glGetSamplerParameterIiv");
                awml_glGetSamplerParameterfv                       = (PFNGLGETSAMPLERPARAMETERFVPROC)                       try_load("glGetSamplerParameterfv");
                awml_glGetSamplerParameterIuiv                     = (PFNGLGETSAMPLERPARAMETERIUIVPROC)                     try_load("glGetSamplerParameterIuiv");
                awml_glQueryCounter                                = (PFNGLQUERYCOUNTERPROC)                                try_load("glQueryCounter");
                awml_glGetQueryObjecti64v                          = (PFNGLGETQUERYOBJECTI64VPROC)                          try_load("glGetQueryObjecti64v");
                awml_glGetQueryObjectui64v                         = (PFNGLGETQUERYOBJECTUI64VPROC)                         try_load("glGetQueryObjectui64v");
                awml_glVertexAttribDivisor                         = (PFNGLVERTEXATTRIBDIVISORPROC)                         try_load("glVertexAttribDivisor");
                awml_glVertexAttribP1ui                            = (PFNGLVERTEXATTRIBP1UIPROC)                            try_load("glVertexAttribP1ui");
                awml_glVertexAttribP1uiv                           = (PFNGLVERTEXATTRIBP1UIVPROC)                           try_load("glVertexAttribP1uiv");
                awml_glVertexAttribP2ui                            = (PFNGLVERTEXATTRIBP2UIPROC)                            try_load("glVertexAttribP2ui");
                awml_glVertexAttribP2uiv                           = (PFNGLVERTEXATTRIBP2UIVPROC)                           try_load("glVertexAttribP2uiv");
                awml_glVertexAttribP3ui                            = (PFNGLVERTEXATTRIBP3UIPROC)                            try_load("glVertexAttribP3ui");
                awml_glVertexAttribP3uiv                           = (PFNGLVERTEXATTRIBP3UIVPROC)                           try_load("glVertexAttribP3uiv");
                awml_glVertexAttribP4ui                            = (PFNGLVERTEXATTRIBP4UIPROC)                            try_load("glVertexAttribP4ui");
                awml_glVertexAttribP4uiv                           = (PFNGLVERTEXATTRIBP4UIVPROC)                           try_load("glVertexAttribP4uiv");
            }
            if (major >= 4)
            {
                awml_glMinSampleShading                            = (PFNGLMINSAMPLESHADINGPROC)                            try_load("glMinSampleShading");
                awml_glBlendEquationi                              = (PFNGLBLENDEQUATIONIPROC)                              try_load("glBlendEquationi");
                awml_glBlendEquationSeparatei                      = (PFNGLBLENDEQUATIONSEPARATEIPROC)                      try_load("glBlendEquationSeparatei");
                awml_glBlendFunci                                  = (PFNGLBLENDFUNCIPROC)                                  try_load("glBlendFunci");
                awml_glBlendFuncSeparatei                          = (PFNGLBLENDFUNCSEPARATEIPROC)                          try_load("glBlendFuncSeparatei");
                awml_glDrawArraysIndirect                          = (PFNGLDRAWARRAYSINDIRECTPROC)                          try_load("glDrawArraysIndirect");
                awml_glDrawElementsIndirect                        = (PFNGLDRAWELEMENTSINDIRECTPROC)                        try_load("glDrawElementsIndirect");
                awml_glUniform1d                                   = (PFNGLUNIFORM1DPROC)                                   try_load("glUniform1d");
                awml_glUniform2d                                   = (PFNGLUNIFORM2DPROC)                                   try_load("glUniform2d");
                awml_glUniform3d                                   = (PFNGLUNIFORM3DPROC)                                   try_load("glUniform3d");
                awml_glUniform4d                                   = (PFNGLUNIFORM4DPROC)                                   try_load("glUniform4d");
                awml_glUniform1dv                                  = (PFNGLUNIFORM1DVPROC)                                  try_load("glUniform1dv");
                awml_glUniform2dv                                  = (PFNGLUNIFORM2DVPROC)                                  try_load("glUniform2dv");
                awml_glUniform3dv                                  = (PFNGLUNIFORM3DVPROC)                                  try_load("glUniform3dv");
                awml_glUniform4dv                                  = (PFNGLUNIFORM4DVPROC)                                  try_load("glUniform4dv");
                awml_glUniformMatrix2dv                            = (PFNGLUNIFORMMATRIX2DVPROC)                            try_load("glUniformMatrix2dv");
                awml_glUniformMatrix3dv                            = (PFNGLUNIFORMMATRIX3DVPROC)                            try_load("glUniformMatrix3dv");
                awml_glUniformMatrix4dv                            = (PFNGLUNIFORMMATRIX4DVPROC)                            try_load("glUniformMatrix4dv");
                awml_glUniformMatrix2x3dv                          = (PFNGLUNIFORMMATRIX2X3DVPROC)                          try_load("glUniformMatrix2x3dv");
                awml_glUniformMatrix2x4dv                          = (PFNGLUNIFORMMATRIX2X4DVPROC)                          try_load("glUniformMatrix2x4dv");
                awml_glUniformMatrix3x2dv                          = (PFNGLUNIFORMMATRIX3X2DVPROC)                          try_load("glUniformMatrix3x2dv");
                awml_glUniformMatrix3x4dv                          = (PFNGLUNIFORMMATRIX3X4DVPROC)                          try_load("glUniformMatrix3x4dv");
                awml_glUniformMatrix4x2dv                          = (PFNGLUNIFORMMATRIX4X2DVPROC)                          try_load("glUniformMatrix4x2dv");
                awml_glUniformMatrix4x3dv                          = (PFNGLUNIFORMMATRIX4X3DVPROC)                          try_load("glUniformMatrix4x3dv");
                awml_glGetUniformdv                                = (PFNGLGETUNIFORMDVPROC)                                try_load("glGetUniformdv");
                awml_glGetSubroutineUniformLocation                = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)                try_load("glGetSubroutineUniformLocation");
                awml_glGetSubroutineIndex                          = (PFNGLGETSUBROUTINEINDEXPROC)                          try_load("glGetSubroutineIndex");
                awml_glGetActiveSubroutineUniformiv                = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)                try_load("glGetActiveSubroutineUniformiv");
                awml_glGetActiveSubroutineUniformName              = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)              try_load("glGetActiveSubroutineUniformName");
                awml_glGetActiveSubroutineName                     = (PFNGLGETACTIVESUBROUTINENAMEPROC)                     try_load("glGetActiveSubroutineName");
                awml_glUniformSubroutinesuiv                       = (PFNGLUNIFORMSUBROUTINESUIVPROC)                       try_load("glUniformSubroutinesuiv");
                awml_glGetUniformSubroutineuiv                     = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)                     try_load("glGetUniformSubroutineuiv");
                awml_glGetProgramStageiv                           = (PFNGLGETPROGRAMSTAGEIVPROC)                           try_load("glGetProgramStageiv");
                awml_glPatchParameteri                             = (PFNGLPATCHPARAMETERIPROC)                             try_load("glPatchParameteri");
                awml_glPatchParameterfv                            = (PFNGLPATCHPARAMETERFVPROC)                            try_load("glPatchParameterfv");
                awml_glBindTransformFeedback                       = (PFNGLBINDTRANSFORMFEEDBACKPROC)                       try_load("glBindTransformFeedback");
                awml_glDeleteTransformFeedbacks                    = (PFNGLDELETETRANSFORMFEEDBACKSPROC)                    try_load("glDeleteTransformFeedbacks");
                awml_glGenTransformFeedbacks                       = (PFNGLGENTRANSFORMFEEDBACKSPROC)                       try_load("glGenTransformFeedbacks");
                awml_glIsTransformFeedback                         = (PFNGLISTRANSFORMFEEDBACKPROC)                         try_load("glIsTransformFeedback");
                awml_glPauseTransformFeedback                      = (PFNGLPAUSETRANSFORMFEEDBACKPROC)                      try_load("glPauseTransformFeedback");
                awml_glResumeTransformFeedback                     = (PFNGLRESUMETRANSFORMFEEDBACKPROC)                     try_load("glResumeTransformFeedback");
                awml_glDrawTransformFeedback                       = (PFNGLDRAWTRANSFORMFEEDBACKPROC)                       try_load("glDrawTransformFeedback");
                awml_glDrawTransformFeedbackStream                 = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)                 try_load("glDrawTransformFeedbackStream");
                awml_glBeginQueryIndexed                           = (PFNGLBEGINQUERYINDEXEDPROC)                           try_load("glBeginQueryIndexed");
                awml_glEndQueryIndexed                             = (PFNGLENDQUERYINDEXEDPROC)                             try_load("glEndQueryIndexed");
                awml_glGetQueryIndexediv                           = (PFNGLGETQUERYINDEXEDIVPROC)                           try_load("glGetQueryIndexediv");
            }
            if (major >= 4 && minor >= 1)
            {
                awml_glReleaseShaderCompiler                       = (PFNGLRELEASESHADERCOMPILERPROC)                       try_load("glReleaseShaderCompiler");
                awml_glShaderBinary                                = (PFNGLSHADERBINARYPROC)                                try_load("glShaderBinary");
                awml_glGetShaderPrecisionFormat                    = (PFNGLGETSHADERPRECISIONFORMATPROC)                    try_load("glGetShaderPrecisionFormat");
                awml_glDepthRangef                                 = (PFNGLDEPTHRANGEFPROC)                                 try_load("glDepthRangef");
                awml_glClearDepthf                                 = (PFNGLCLEARDEPTHFPROC)                                 try_load("glClearDepthf");
                awml_glGetProgramBinary                            = (PFNGLGETPROGRAMBINARYPROC)                            try_load("glGetProgramBinary");
                awml_glProgramBinary                               = (PFNGLPROGRAMBINARYPROC)                               try_load("glProgramBinary");
                awml_glProgramParameteri                           = (PFNGLPROGRAMPARAMETERIPROC)                           try_load("glProgramParameteri");
                awml_glUseProgramStages                            = (PFNGLUSEPROGRAMSTAGESPROC)                            try_load("glUseProgramStages");
                awml_glActiveShaderProgram                         = (PFNGLACTIVESHADERPROGRAMPROC)                         try_load("glActiveShaderProgram");
                awml_glCreateShaderProgramv                        = (PFNGLCREATESHADERPROGRAMVPROC)                        try_load("glCreateShaderProgramv");
                awml_glBindProgramPipeline                         = (PFNGLBINDPROGRAMPIPELINEPROC)                         try_load("glBindProgramPipeline");
                awml_glDeleteProgramPipelines                      = (PFNGLDELETEPROGRAMPIPELINESPROC)                      try_load("glDeleteProgramPipelines");
                awml_glGenProgramPipelines                         = (PFNGLGENPROGRAMPIPELINESPROC)                         try_load("glGenProgramPipelines");
                awml_glIsProgramPipeline                           = (PFNGLISPROGRAMPIPELINEPROC)                           try_load("glIsProgramPipeline");
                awml_glGetProgramPipelineiv                        = (PFNGLGETPROGRAMPIPELINEIVPROC)                        try_load("glGetProgramPipelineiv");
                awml_glProgramUniform1i                            = (PFNGLPROGRAMUNIFORM1IPROC)                            try_load("glProgramUniform1i");
                awml_glProgramUniform1iv                           = (PFNGLPROGRAMUNIFORM1IVPROC)                           try_load("glProgramUniform1iv");
                awml_glProgramUniform1f                            = (PFNGLPROGRAMUNIFORM1FPROC)                            try_load("glProgramUniform1f");
                awml_glProgramUniform1fv                           = (PFNGLPROGRAMUNIFORM1FVPROC)                           try_load("glProgramUniform1fv");
                awml_glProgramUniform1d                            = (PFNGLPROGRAMUNIFORM1DPROC)                            try_load("glProgramUniform1d");
                awml_glProgramUniform1dv                           = (PFNGLPROGRAMUNIFORM1DVPROC)                           try_load("glProgramUniform1dv");
                awml_glProgramUniform1ui                           = (PFNGLPROGRAMUNIFORM1UIPROC)                           try_load("glProgramUniform1ui");
                awml_glProgramUniform1uiv                          = (PFNGLPROGRAMUNIFORM1UIVPROC)                          try_load("glProgramUniform1uiv");
                awml_glProgramUniform2i                            = (PFNGLPROGRAMUNIFORM2IPROC)                            try_load("glProgramUniform2i");
                awml_glProgramUniform2iv                           = (PFNGLPROGRAMUNIFORM2IVPROC)                           try_load("glProgramUniform2iv");
                awml_glProgramUniform2f                            = (PFNGLPROGRAMUNIFORM2FPROC)                            try_load("glProgramUniform2f");
                awml_glProgramUniform2fv                           = (PFNGLPROGRAMUNIFORM2FVPROC)                           try_load("glProgramUniform2fv");
                awml_glProgramUniform2d                            = (PFNGLPROGRAMUNIFORM2DPROC)                            try_load("glProgramUniform2d");
                awml_glProgramUniform2dv                           = (PFNGLPROGRAMUNIFORM2DVPROC)                           try_load("glProgramUniform2dv");
                awml_glProgramUniform2ui                           = (PFNGLPROGRAMUNIFORM2UIPROC)                           try_load("glProgramUniform2ui");
                awml_glProgramUniform2uiv                          = (PFNGLPROGRAMUNIFORM2UIVPROC)                          try_load("glProgramUniform2uiv");
                awml_glProgramUniform3i                            = (PFNGLPROGRAMUNIFORM3IPROC)                            try_load("glProgramUniform3i");
                awml_glProgramUniform3iv                           = (PFNGLPROGRAMUNIFORM3IVPROC)                           try_load("glProgramUniform3iv");
                awml_glProgramUniform3f                            = (PFNGLPROGRAMUNIFORM3FPROC)                            try_load("glProgramUniform3f");
                awml_glProgramUniform3fv                           = (PFNGLPROGRAMUNIFORM3FVPROC)                           try_load("glProgramUniform3fv");
                awml_glProgramUniform3d                            = (PFNGLPROGRAMUNIFORM3DPROC)                            try_load("glProgramUniform3d");
                awml_glProgramUniform3dv                           = (PFNGLPROGRAMUNIFORM3DVPROC)                           try_load("glProgramUniform3dv");
                awml_glProgramUniform3ui                           = (PFNGLPROGRAMUNIFORM3UIPROC)                           try_load("glProgramUniform3ui");
                awml_glProgramUniform3uiv                          = (PFNGLPROGRAMUNIFORM3UIVPROC)                          try_load("glProgramUniform3uiv");
                awml_glProgramUniform4i                            = (PFNGLPROGRAMUNIFORM4IPROC)                            try_load("glProgramUniform4i");
                awml_glProgramUniform4iv                           = (PFNGLPROGRAMUNIFORM4IVPROC)                           try_load("glProgramUniform4iv");
                awml_glProgramUniform4f                            = (PFNGLPROGRAMUNIFORM4FPROC)                            try_load("glProgramUniform4f");
                awml_glProgramUniform4fv                           = (PFNGLPROGRAMUNIFORM4FVPROC)                           try_load("glProgramUniform4fv");
                awml_glProgramUniform4d                            = (PFNGLPROGRAMUNIFORM4DPROC)                            try_load("glProgramUniform4d");
                awml_glProgramUniform4dv                           = (PFNGLPROGRAMUNIFORM4DVPROC)                           try_load("glProgramUniform4dv");
                awml_glProgramUniform4ui                           = (PFNGLPROGRAMUNIFORM4UIPROC)                           try_load("glProgramUniform4ui");
                awml_glProgramUniform4uiv                          = (PFNGLPROGRAMUNIFORM4UIVPROC)                          try_load("glProgramUniform4uiv");
                awml_glProgramUniformMatrix2fv                     = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)                     try_load("glProgramUniformMatrix2fv");
                awml_glProgramUniformMatrix3fv                     = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)                     try_load("glProgramUniformMatrix3fv");
                awml_glProgramUniformMatrix4fv                     = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)                     try_load("glProgramUniformMatrix4fv");
                awml_glProgramUniformMatrix2dv                     = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)                     try_load("glProgramUniformMatrix2dv");
                awml_glProgramUniformMatrix3dv                     = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)                     try_load("glProgramUniformMatrix3dv");
                awml_glProgramUniformMatrix4dv                     = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)                     try_load("glProgramUniformMatrix4dv");
                awml_glProgramUniformMatrix2x3fv                   = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)                   try_load("glProgramUniformMatrix2x3fv");
                awml_glProgramUniformMatrix3x2fv                   = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)                   try_load("glProgramUniformMatrix3x2fv");
                awml_glProgramUniformMatrix2x4fv                   = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)                   try_load("glProgramUniformMatrix2x4fv");
                awml_glProgramUniformMatrix4x2fv                   = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)                   try_load("glProgramUniformMatrix4x2fv");
                awml_glProgramUniformMatrix3x4fv                   = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)                   try_load("glProgramUniformMatrix3x4fv");
                awml_glProgramUniformMatrix4x3fv                   = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)                   try_load("glProgramUniformMatrix4x3fv");
                awml_glProgramUniformMatrix2x3dv                   = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)                   try_load("glProgramUniformMatrix2x3dv");
                awml_glProgramUniformMatrix3x2dv                   = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)                   try_load("glProgramUniformMatrix3x2dv");
                awml_glProgramUniformMatrix2x4dv                   = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)                   try_load("glProgramUniformMatrix2x4dv");
                awml_glProgramUniformMatrix4x2dv                   = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)                   try_load("glProgramUniformMatrix4x2dv");
                awml_glProgramUniformMatrix3x4dv                   = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)                   try_load("glProgramUniformMatrix3x4dv");
                awml_glProgramUniformMatrix4x3dv                   = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)                   try_load("glProgramUniformMatrix4x3dv");
                awml_glValidateProgramPipeline                     = (PFNGLVALIDATEPROGRAMPIPELINEPROC)                     try_load("glValidateProgramPipeline");
                awml_glGetProgramPipelineInfoLog                   = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)                   try_load("glGetProgramPipelineInfoLog");
                awml_glVertexAttribL1d                             = (PFNGLVERTEXATTRIBL1DPROC)                             try_load("glVertexAttribL1d");
                awml_glVertexAttribL2d                             = (PFNGLVERTEXATTRIBL2DPROC)                             try_load("glVertexAttribL2d");
                awml_glVertexAttribL3d                             = (PFNGLVERTEXATTRIBL3DPROC)                             try_load("glVertexAttribL3d");
                awml_glVertexAttribL4d                             = (PFNGLVERTEXATTRIBL4DPROC)                             try_load("glVertexAttribL4d");
                awml_glVertexAttribL1dv                            = (PFNGLVERTEXATTRIBL1DVPROC)                            try_load("glVertexAttribL1dv");
                awml_glVertexAttribL2dv                            = (PFNGLVERTEXATTRIBL2DVPROC)                            try_load("glVertexAttribL2dv");
                awml_glVertexAttribL3dv                            = (PFNGLVERTEXATTRIBL3DVPROC)                            try_load("glVertexAttribL3dv");
                awml_glVertexAttribL4dv                            = (PFNGLVERTEXATTRIBL4DVPROC)                            try_load("glVertexAttribL4dv");
                awml_glVertexAttribLPointer                        = (PFNGLVERTEXATTRIBLPOINTERPROC)                        try_load("glVertexAttribLPointer");
                awml_glGetVertexAttribLdv                          = (PFNGLGETVERTEXATTRIBLDVPROC)                          try_load("glGetVertexAttribLdv");
                awml_glViewportArrayv                              = (PFNGLVIEWPORTARRAYVPROC)                              try_load("glViewportArrayv");
                awml_glViewportIndexedf                            = (PFNGLVIEWPORTINDEXEDFPROC)                            try_load("glViewportIndexedf");
                awml_glViewportIndexedfv                           = (PFNGLVIEWPORTINDEXEDFVPROC)                           try_load("glViewportIndexedfv");
                awml_glScissorArrayv                               = (PFNGLSCISSORARRAYVPROC)                               try_load("glScissorArrayv");
                awml_glScissorIndexed                              = (PFNGLSCISSORINDEXEDPROC)                              try_load("glScissorIndexed");
                awml_glScissorIndexedv                             = (PFNGLSCISSORINDEXEDVPROC)                             try_load("glScissorIndexedv");
                awml_glDepthRangeArrayv                            = (PFNGLDEPTHRANGEARRAYVPROC)                            try_load("glDepthRangeArrayv");
                awml_glDepthRangeIndexed                           = (PFNGLDEPTHRANGEINDEXEDPROC)                           try_load("glDepthRangeIndexed");
                awml_glGetFloati_v                                 = (PFNGLGETFLOATI_VPROC)                                 try_load("glGetFloati_v");
                awml_glGetDoublei_v                                = (PFNGLGETDOUBLEI_VPROC)                                try_load("glGetDoublei_v");
            }
            if (major >= 4 && minor >= 2)
            {
                awml_glDrawArraysInstancedBaseInstance             = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)             try_load("glDrawArraysInstancedBaseInstance");
                awml_glDrawElementsInstancedBaseInstance           = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)           try_load("glDrawElementsInstancedBaseInstance");
                awml_glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) try_load("glDrawElementsInstancedBaseVertexBaseInstance");
                awml_glGetInternalformativ                         = (PFNGLGETINTERNALFORMATIVPROC)                         try_load("glGetInternalformativ");
                awml_glGetActiveAtomicCounterBufferiv              = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)              try_load("glGetActiveAtomicCounterBufferiv");
                awml_glBindImageTexture                            = (PFNGLBINDIMAGETEXTUREPROC)                            try_load("glBindImageTexture");
                awml_glMemoryBarrier                               = (PFNGLMEMORYBARRIERPROC)                               try_load("glMemoryBarrier");
                awml_glTexStorage1D                                = (PFNGLTEXSTORAGE1DPROC)                                try_load("glTexStorage1D");
                awml_glTexStorage2D                                = (PFNGLTEXSTORAGE2DPROC)                                try_load("glTexStorage2D");
                awml_glTexStorage3D                                = (PFNGLTEXSTORAGE3DPROC)                                try_load("glTexStorage3D");
                awml_glDrawTransformFeedbackInstanced              = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)              try_load("glDrawTransformFeedbackInstanced");
                awml_glDrawTransformFeedbackStreamInstanced        = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)        try_load("glDrawTransformFeedbackStreamInstanced");
            }
            if (major >= 4 && minor >= 3)
            {
                awml_glClearBufferData                             = (PFNGLCLEARBUFFERDATAPROC)                             try_load("glClearBufferData");
                awml_glClearBufferSubData                          = (PFNGLCLEARBUFFERSUBDATAPROC)                          try_load("glClearBufferSubData");
                awml_glDispatchCompute                             = (PFNGLDISPATCHCOMPUTEPROC)                             try_load("glDispatchCompute");
                awml_glDispatchComputeIndirect                     = (PFNGLDISPATCHCOMPUTEINDIRECTPROC)                     try_load("glDispatchComputeIndirect");
                awml_glCopyImageSubData                            = (PFNGLCOPYIMAGESUBDATAPROC)                            try_load("glCopyImageSubData");
                awml_glFramebufferParameteri                       = (PFNGLFRAMEBUFFERPARAMETERIPROC)                       try_load("glFramebufferParameteri");
                awml_glGetFramebufferParameteriv                   = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)                   try_load("glGetFramebufferParameteriv");
                awml_glGetInternalformati64v                       = (PFNGLGETINTERNALFORMATI64VPROC)                       try_load("glGetInternalformati64v");
                awml_glInvalidateTexSubImage                       = (PFNGLINVALIDATETEXSUBIMAGEPROC)                       try_load("glInvalidateTexSubImage");
                awml_glInvalidateTexImage                          = (PFNGLINVALIDATETEXIMAGEPROC)                          try_load("glInvalidateTexImage");
                awml_glInvalidateBufferSubData                     = (PFNGLINVALIDATEBUFFERSUBDATAPROC)                     try_load("glInvalidateBufferSubData");
                awml_glInvalidateBufferData                        = (PFNGLINVALIDATEBUFFERDATAPROC)                        try_load("glInvalidateBufferData");
                awml_glInvalidateFramebuffer                       = (PFNGLINVALIDATEFRAMEBUFFERPROC)                       try_load("glInvalidateFramebuffer");
                awml_glInvalidateSubFramebuffer                    = (PFNGLINVALIDATESUBFRAMEBUFFERPROC)                    try_load("glInvalidateSubFramebuffer");
                awml_glMultiDrawArraysIndirect                     = (PFNGLMULTIDRAWARRAYSINDIRECTPROC)                     try_load("glMultiDrawArraysIndirect");
                awml_glMultiDrawElementsIndirect                   = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)                   try_load("glMultiDrawElementsIndirect");
                awml_glGetProgramInterfaceiv                       = (PFNGLGETPROGRAMINTERFACEIVPROC)                       try_load("glGetProgramInterfaceiv");
                awml_glGetProgramResourceIndex                     = (PFNGLGETPROGRAMRESOURCEINDEXPROC)                     try_load("glGetProgramResourceIndex");
                awml_glGetProgramResourceName                      = (PFNGLGETPROGRAMRESOURCENAMEPROC)                      try_load("glGetProgramResourceName");
                awml_glGetProgramResourceiv                        = (PFNGLGETPROGRAMRESOURCEIVPROC)                        try_load("glGetProgramResourceiv");
                awml_glGetProgramResourceLocation                  = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)                  try_load("glGetProgramResourceLocation");
                awml_glGetProgramResourceLocationIndex             = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)             try_load("glGetProgramResourceLocationIndex");
                awml_glShaderStorageBlockBinding                   = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)                   try_load("glShaderStorageBlockBinding");
                awml_glTexBufferRange                              = (PFNGLTEXBUFFERRANGEPROC)                              try_load("glTexBufferRange");
                awml_glTexStorage2DMultisample                     = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)                     try_load("glTexStorage2DMultisample");
                awml_glTexStorage3DMultisample                     = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)                     try_load("glTexStorage3DMultisample");
                awml_glTextureView                                 = (PFNGLTEXTUREVIEWPROC)                                 try_load("glTextureView");
                awml_glBindVertexBuffer                            = (PFNGLBINDVERTEXBUFFERPROC)                            try_load("glBindVertexBuffer");
                awml_glVertexAttribFormat                          = (PFNGLVERTEXATTRIBFORMATPROC)                          try_load("glVertexAttribFormat");
                awml_glVertexAttribIFormat                         = (PFNGLVERTEXATTRIBIFORMATPROC)                         try_load("glVertexAttribIFormat");
                awml_glVertexAttribLFormat                         = (PFNGLVERTEXATTRIBLFORMATPROC)                         try_load("glVertexAttribLFormat");
                awml_glVertexAttribBinding                         = (PFNGLVERTEXATTRIBBINDINGPROC)                         try_load("glVertexAttribBinding");
                awml_glVertexBindingDivisor                        = (PFNGLVERTEXBINDINGDIVISORPROC)                        try_load("glVertexBindingDivisor");
                awml_glDebugMessageControl                         = (PFNGLDEBUGMESSAGECONTROLPROC)                         try_load("glDebugMessageControl");
                awml_glDebugMessageInsert                          = (PFNGLDEBUGMESSAGEINSERTPROC)                          try_load("glDebugMessageInsert");
                awml_glDebugMessageCallback                        = (PFNGLDEBUGMESSAGECALLBACKPROC)                        try_load("glDebugMessageCallback");
                awml_glGetDebugMessageLog                          = (PFNGLGETDEBUGMESSAGELOGPROC)                          try_load("glGetDebugMessageLog");
                awml_glPushDebugGroup                              = (PFNGLPUSHDEBUGGROUPPROC)                              try_load("glPushDebugGroup");
                awml_glPopDebugGroup                               = (PFNGLPOPDEBUGGROUPPROC)                               try_load("glPopDebugGroup");
                awml_glObjectLabel                                 = (PFNGLOBJECTLABELPROC)                                 try_load("glObjectLabel");
                awml_glGetObjectLabel                              = (PFNGLGETOBJECTLABELPROC)                              try_load("glGetObjectLabel");
                awml_glObjectPtrLabel                              = (PFNGLOBJECTPTRLABELPROC)                              try_load("glObjectPtrLabel");
                awml_glGetObjectPtrLabel                           = (PFNGLGETOBJECTPTRLABELPROC)                           try_load("glGetObjectPtrLabel");
            }
            if (major >= 4 && minor >= 4)
            {
                awml_glBufferStorage                               = (PFNGLBUFFERSTORAGEPROC)                               try_load("glBufferStorage");
                awml_glClearTexImage                               = (PFNGLCLEARTEXIMAGEPROC)                               try_load("glClearTexImage");
                awml_glClearTexSubImage                            = (PFNGLCLEARTEXSUBIMAGEPROC)                            try_load("glClearTexSubImage");
                awml_glBindBuffersBase                             = (PFNGLBINDBUFFERSBASEPROC)                             try_load("glBindBuffersBase");
                awml_glBindBuffersRange                            = (PFNGLBINDBUFFERSRANGEPROC)                            try_load("glBindBuffersRange");
                awml_glBindTextures                                = (PFNGLBINDTEXTURESPROC)                                try_load("glBindTextures");
                awml_glBindSamplers                                = (PFNGLBINDSAMPLERSPROC)                                try_load("glBindSamplers");
                awml_glBindImageTextures                           = (PFNGLBINDIMAGETEXTURESPROC)                           try_load("glBindImageTextures");
                awml_glBindVertexBuffers                           = (PFNGLBINDVERTEXBUFFERSPROC)                           try_load("glBindVertexBuffers");
            }
            if (major >= 4 && minor >= 5)
            {
                awml_glClipControl                                 = (PFNGLCLIPCONTROLPROC)                                 try_load("glClipControl");
                awml_glCreateTransformFeedbacks                    = (PFNGLCREATETRANSFORMFEEDBACKSPROC)                    try_load("glCreateTransformFeedbacks");
                awml_glTransformFeedbackBufferBase                 = (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)                 try_load("glTransformFeedbackBufferBase");
                awml_glTransformFeedbackBufferRange                = (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)                try_load("glTransformFeedbackBufferRange");
                awml_glGetTransformFeedbackiv                      = (PFNGLGETTRANSFORMFEEDBACKIVPROC)                      try_load("glGetTransformFeedbackiv");
                awml_glGetTransformFeedbacki_v                     = (PFNGLGETTRANSFORMFEEDBACKI_VPROC)                     try_load("glGetTransformFeedbacki_v");
                awml_glGetTransformFeedbacki64_v                   = (PFNGLGETTRANSFORMFEEDBACKI64_VPROC)                   try_load("glGetTransformFeedbacki64_v");
                awml_glCreateBuffers                               = (PFNGLCREATEBUFFERSPROC)                               try_load("glCreateBuffers");
                awml_glNamedBufferStorage                          = (PFNGLNAMEDBUFFERSTORAGEPROC)                          try_load("glNamedBufferStorage");
                awml_glNamedBufferData                             = (PFNGLNAMEDBUFFERDATAPROC)                             try_load("glNamedBufferData");
                awml_glNamedBufferSubData                          = (PFNGLNAMEDBUFFERSUBDATAPROC)                          try_load("glNamedBufferSubData");
                awml_glCopyNamedBufferSubData                      = (PFNGLCOPYNAMEDBUFFERSUBDATAPROC)                      try_load("glCopyNamedBufferSubData");
                awml_glClearNamedBufferData                        = (PFNGLCLEARNAMEDBUFFERDATAPROC)                        try_load("glClearNamedBufferData");
                awml_glClearNamedBufferSubData                     = (PFNGLCLEARNAMEDBUFFERSUBDATAPROC)                     try_load("glClearNamedBufferSubData");
                awml_glMapNamedBuffer                              = (PFNGLMAPNAMEDBUFFERPROC)                              try_load("glMapNamedBuffer");
                awml_glMapNamedBufferRange                         = (PFNGLMAPNAMEDBUFFERRANGEPROC)                         try_load("glMapNamedBufferRange");
                awml_glUnmapNamedBuffer                            = (PFNGLUNMAPNAMEDBUFFERPROC)                            try_load("glUnmapNamedBuffer");
                awml_glFlushMappedNamedBufferRange                 = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)                 try_load("glFlushMappedNamedBufferRange");
                awml_glGetNamedBufferParameteriv                   = (PFNGLGETNAMEDBUFFERPARAMETERIVPROC)                   try_load("glGetNamedBufferParameteriv");
                awml_glGetNamedBufferParameteri64v                 = (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)                 try_load("glGetNamedBufferParameteri64v");
                awml_glGetNamedBufferPointerv                      = (PFNGLGETNAMEDBUFFERPOINTERVPROC)                      try_load("glGetNamedBufferPointerv");
                awml_glGetNamedBufferSubData                       = (PFNGLGETNAMEDBUFFERSUBDATAPROC)                       try_load("glGetNamedBufferSubData");
                awml_glCreateFramebuffers                          = (PFNGLCREATEFRAMEBUFFERSPROC)                          try_load("glCreateFramebuffers");
                awml_glNamedFramebufferRenderbuffer                = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)                try_load("glNamedFramebufferRenderbuffer");
                awml_glNamedFramebufferParameteri                  = (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)                  try_load("glNamedFramebufferParameteri");
                awml_glNamedFramebufferTexture                     = (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)                     try_load("glNamedFramebufferTexture");
                awml_glNamedFramebufferTextureLayer                = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)                try_load("glNamedFramebufferTextureLayer");
                awml_glNamedFramebufferDrawBuffer                  = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)                  try_load("glNamedFramebufferDrawBuffer");
                awml_glNamedFramebufferDrawBuffers                 = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)                 try_load("glNamedFramebufferDrawBuffers");
                awml_glNamedFramebufferReadBuffer                  = (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)                  try_load("glNamedFramebufferReadBuffer");
                awml_glInvalidateNamedFramebufferData              = (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)              try_load("glInvalidateNamedFramebufferData");
                awml_glInvalidateNamedFramebufferSubData           = (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)           try_load("glInvalidateNamedFramebufferSubData");
                awml_glClearNamedFramebufferiv                     = (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)                     try_load("glClearNamedFramebufferiv");
                awml_glClearNamedFramebufferuiv                    = (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)                    try_load("glClearNamedFramebufferuiv");
                awml_glClearNamedFramebufferfv                     = (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)                     try_load("glClearNamedFramebufferfv");
                awml_glClearNamedFramebufferfi                     = (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)                     try_load("glClearNamedFramebufferfi");
                awml_glBlitNamedFramebuffer                        = (PFNGLBLITNAMEDFRAMEBUFFERPROC)                        try_load("glBlitNamedFramebuffer");
                awml_glCheckNamedFramebufferStatus                 = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)                 try_load("glCheckNamedFramebufferStatus");
                awml_glGetNamedFramebufferParameteriv              = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)              try_load("glGetNamedFramebufferParameteriv");
                awml_glGetNamedFramebufferAttachmentParameteriv    = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)    try_load("glGetNamedFramebufferAttachmentParameteriv");
                awml_glCreateRenderbuffers                         = (PFNGLCREATERENDERBUFFERSPROC)                         try_load("glCreateRenderbuffers");
                awml_glNamedRenderbufferStorage                    = (PFNGLNAMEDRENDERBUFFERSTORAGEPROC)                    try_load("glNamedRenderbufferStorage");
                awml_glNamedRenderbufferStorageMultisample         = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)         try_load("glNamedRenderbufferStorageMultisample");
                awml_glGetNamedRenderbufferParameteriv             = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)             try_load("glGetNamedRenderbufferParameteriv");
                awml_glCreateTextures                              = (PFNGLCREATETEXTURESPROC)                              try_load("glCreateTextures");
                awml_glTextureBuffer                               = (PFNGLTEXTUREBUFFERPROC)                               try_load("glTextureBuffer");
                awml_glTextureBufferRange                          = (PFNGLTEXTUREBUFFERRANGEPROC)                          try_load("glTextureBufferRange");
                awml_glTextureStorage1D                            = (PFNGLTEXTURESTORAGE1DPROC)                            try_load("glTextureStorage1D");
                awml_glTextureStorage2D                            = (PFNGLTEXTURESTORAGE2DPROC)                            try_load("glTextureStorage2D");
                awml_glTextureStorage3D                            = (PFNGLTEXTURESTORAGE3DPROC)                            try_load("glTextureStorage3D");
                awml_glTextureStorage2DMultisample                 = (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)                 try_load("glTextureStorage2DMultisample");
                awml_glTextureStorage3DMultisample                 = (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)                 try_load("glTextureStorage3DMultisample");
                awml_glTextureSubImage1D                           = (PFNGLTEXTURESUBIMAGE1DPROC)                           try_load("glTextureSubImage1D");
                awml_glTextureSubImage2D                           = (PFNGLTEXTURESUBIMAGE2DPROC)                           try_load("glTextureSubImage2D");
                awml_glTextureSubImage3D                           = (PFNGLTEXTURESUBIMAGE3DPROC)                           try_load("glTextureSubImage3D");
                awml_glCompressedTextureSubImage1D                 = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)                 try_load("glCompressedTextureSubImage1D");
                awml_glCompressedTextureSubImage2D                 = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)                 try_load("glCompressedTextureSubImage2D");
                awml_glCompressedTextureSubImage3D                 = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)                 try_load("glCompressedTextureSubImage3D");
                awml_glCopyTextureSubImage1D                       = (PFNGLCOPYTEXTURESUBIMAGE1DPROC)                       try_load("glCopyTextureSubImage1D");
                awml_glCopyTextureSubImage2D                       = (PFNGLCOPYTEXTURESUBIMAGE2DPROC)                       try_load("glCopyTextureSubImage2D");
                awml_glCopyTextureSubImage3D                       = (PFNGLCOPYTEXTURESUBIMAGE3DPROC)                       try_load("glCopyTextureSubImage3D");
                awml_glTextureParameterf                           = (PFNGLTEXTUREPARAMETERFPROC)                           try_load("glTextureParameterf");
                awml_glTextureParameterfv                          = (PFNGLTEXTUREPARAMETERFVPROC)                          try_load("glTextureParameterfv");
                awml_glTextureParameteri                           = (PFNGLTEXTUREPARAMETERIPROC)                           try_load("glTextureParameteri");
                awml_glTextureParameterIiv                         = (PFNGLTEXTUREPARAMETERIIVPROC)                         try_load("glTextureParameterIiv");
                awml_glTextureParameterIuiv                        = (PFNGLTEXTUREPARAMETERIUIVPROC)                        try_load("glTextureParameterIuiv");
                awml_glTextureParameteriv                          = (PFNGLTEXTUREPARAMETERIVPROC)                          try_load("glTextureParameteriv");
                awml_glGenerateTextureMipmap                       = (PFNGLGENERATETEXTUREMIPMAPPROC)                       try_load("glGenerateTextureMipmap");
                awml_glBindTextureUnit                             = (PFNGLBINDTEXTUREUNITPROC)                             try_load("glBindTextureUnit");
                awml_glGetTextureImage                             = (PFNGLGETTEXTUREIMAGEPROC)                             try_load("glGetTextureImage");
                awml_glGetCompressedTextureImage                   = (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)                   try_load("glGetCompressedTextureImage");
                awml_glGetTextureLevelParameterfv                  = (PFNGLGETTEXTURELEVELPARAMETERFVPROC)                  try_load("glGetTextureLevelParameterfv");
                awml_glGetTextureLevelParameteriv                  = (PFNGLGETTEXTURELEVELPARAMETERIVPROC)                  try_load("glGetTextureLevelParameteriv");
                awml_glGetTextureParameterfv                       = (PFNGLGETTEXTUREPARAMETERFVPROC)                       try_load("glGetTextureParameterfv");
                awml_glGetTextureParameterIiv                      = (PFNGLGETTEXTUREPARAMETERIIVPROC)                      try_load("glGetTextureParameterIiv");
                awml_glGetTextureParameterIuiv                     = (PFNGLGETTEXTUREPARAMETERIUIVPROC)                     try_load("glGetTextureParameterIuiv");
                awml_glGetTextureParameteriv                       = (PFNGLGETTEXTUREPARAMETERIVPROC)                       try_load("glGetTextureParameteriv");
                awml_glCreateVertexArrays                          = (PFNGLCREATEVERTEXARRAYSPROC)                          try_load("glCreateVertexArrays");
                awml_glDisableVertexArrayAttrib                    = (PFNGLDISABLEVERTEXARRAYATTRIBPROC)                    try_load("glDisableVertexArrayAttrib");
                awml_glEnableVertexArrayAttrib                     = (PFNGLENABLEVERTEXARRAYATTRIBPROC)                     try_load("glEnableVertexArrayAttrib");
                awml_glVertexArrayElementBuffer                    = (PFNGLVERTEXARRAYELEMENTBUFFERPROC)                    try_load("glVertexArrayElementBuffer");
                awml_glVertexArrayVertexBuffer                     = (PFNGLVERTEXARRAYVERTEXBUFFERPROC)                     try_load("glVertexArrayVertexBuffer");
                awml_glVertexArrayVertexBuffers                    = (PFNGLVERTEXARRAYVERTEXBUFFERSPROC)                    try_load("glVertexArrayVertexBuffers");
                awml_glVertexArrayAttribBinding                    = (PFNGLVERTEXARRAYATTRIBBINDINGPROC)                    try_load("glVertexArrayAttribBinding");
                awml_glVertexArrayAttribFormat                     = (PFNGLVERTEXARRAYATTRIBFORMATPROC)                     try_load("glVertexArrayAttribFormat");
                awml_glVertexArrayAttribIFormat                    = (PFNGLVERTEXARRAYATTRIBIFORMATPROC)                    try_load("glVertexArrayAttribIFormat");
                awml_glVertexArrayAttribLFormat                    = (PFNGLVERTEXARRAYATTRIBLFORMATPROC)                    try_load("glVertexArrayAttribLFormat");
                awml_glVertexArrayBindingDivisor                   = (PFNGLVERTEXARRAYBINDINGDIVISORPROC)                   try_load("glVertexArrayBindingDivisor");
                awml_glGetVertexArrayiv                            = (PFNGLGETVERTEXARRAYIVPROC)                            try_load("glGetVertexArrayiv");
                awml_glGetVertexArrayIndexediv                     = (PFNGLGETVERTEXARRAYINDEXEDIVPROC)                     try_load("glGetVertexArrayIndexediv");
                awml_glGetVertexArrayIndexed64iv                   = (PFNGLGETVERTEXARRAYINDEXED64IVPROC)                   try_load("glGetVertexArrayIndexed64iv");
                awml_glCreateSamplers                              = (PFNGLCREATESAMPLERSPROC)                              try_load("glCreateSamplers");
                awml_glCreateProgramPipelines                      = (PFNGLCREATEPROGRAMPIPELINESPROC)                      try_load("glCreateProgramPipelines");
                awml_glCreateQueries                               = (PFNGLCREATEQUERIESPROC)                               try_load("glCreateQueries");
                awml_glGetQueryBufferObjecti64v                    = (PFNGLGETQUERYBUFFEROBJECTI64VPROC)                    try_load("glGetQueryBufferObjecti64v");
                awml_glGetQueryBufferObjectiv                      = (PFNGLGETQUERYBUFFEROBJECTIVPROC)                      try_load("glGetQueryBufferObjectiv");
                awml_glGetQueryBufferObjectui64v                   = (PFNGLGETQUERYBUFFEROBJECTUI64VPROC)                   try_load("glGetQueryBufferObjectui64v");
                awml_glGetQueryBufferObjectuiv                     = (PFNGLGETQUERYBUFFEROBJECTUIVPROC)                     try_load("glGetQueryBufferObjectuiv");
                awml_glMemoryBarrierByRegion                       = (PFNGLMEMORYBARRIERBYREGIONPROC)                       try_load("glMemoryBarrierByRegion");
                awml_glGetTextureSubImage                          = (PFNGLGETTEXTURESUBIMAGEPROC)                          try_load("glGetTextureSubImage");
                awml_glGetCompressedTextureSubImage                = (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)                try_load("glGetCompressedTextureSubImage");
                awml_glGetGraphicsResetStatus                      = (PFNGLGETGRAPHICSRESETSTATUSPROC)                      try_load("glGetGraphicsResetStatus");
                awml_glGetnCompressedTexImage                      = (PFNGLGETNCOMPRESSEDTEXIMAGEPROC)                      try_load("glGetnCompressedTexImage");
                awml_glGetnTexImage                                = (PFNGLGETNTEXIMAGEPROC)                                try_load("glGetnTexImage");
                awml_glGetnUniformdv                               = (PFNGLGETNUNIFORMDVPROC)                               try_load("glGetnUniformdv");
                awml_glGetnUniformfv                               = (PFNGLGETNUNIFORMFVPROC)                               try_load("glGetnUniformfv");
                awml_glGetnUniformiv                               = (PFNGLGETNUNIFORMIVPROC)                               try_load("glGetnUniformiv");
                awml_glGetnUniformuiv                              = (PFNGLGETNUNIFORMUIVPROC)                              try_load("glGetnUniformuiv");
                awml_glReadnPixels                                 = (PFNGLREADNPIXELSPROC)                                 try_load("glReadnPixels");
                awml_glTextureBarrier                              = (PFNGLTEXTUREBARRIERPROC)                              try_load("glTextureBarrier");
            }
            if (major >= 4 && minor >= 6)
            {
                awml_glSpecializeShader                            = (PFNGLSPECIALIZESHADERPROC)                            try_load("glSpecializeShader");
                awml_glMultiDrawArraysIndirectCount                = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)                try_load("glMultiDrawArraysIndirectCount");
                awml_glMultiDrawElementsIndirectCount              = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC)              try_load("glMultiDrawElementsIndirectCount");
                awml_glPolygonOffsetClamp                          = (PFNGLPOLYGONOFFSETCLAMPPROC)                          try_load("glPolygonOffsetClamp");
            }
        }
        catch (const std::exception& ex)
        {
            (void)ex; // can be useful later tho
            return false;
        }

        return true;
    }

    void* glLoader::try_load(const char* func)
    {
        void* func_ptr = nullptr;

        HMODULE module = LoadLibraryA("opengl32.dll");
        if (module)
            func_ptr = (void*)GetProcAddress(module, func);

        if (!func_ptr)
        {
            func_ptr = wglGetProcAddress(func);
        }

        if (!func_ptr)
            throw std::runtime_error(func);

        return func_ptr;
    }
}
